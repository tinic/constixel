namespace constixel {

struct mario_kart_ds_mono {

    static constexpr const char *name = "Mario Kart DS";
    static constexpr const char *style = "Regular";
    static constexpr int32_t size = 16;
    static constexpr int32_t ascent = 11;
    static constexpr int32_t descent = -2;
    static constexpr int32_t line_height = 13;
    static constexpr int32_t total_height = 13;

    using lookup_type = uint16_t;
    static constexpr std::array<std::pair<uint16_t, uint16_t>, 69> glyph_table{{
        { uint16_t{0x0020}, uint16_t{0x0000} },
        { uint16_t{0x0021}, uint16_t{0x0001} },
        { uint16_t{0x0026}, uint16_t{0x0002} },
        { uint16_t{0x002d}, uint16_t{0x0003} },
        { uint16_t{0x002e}, uint16_t{0x0004} },
        { uint16_t{0x0030}, uint16_t{0x0005} },
        { uint16_t{0x0031}, uint16_t{0x0006} },
        { uint16_t{0x0032}, uint16_t{0x0007} },
        { uint16_t{0x0033}, uint16_t{0x0008} },
        { uint16_t{0x0034}, uint16_t{0x0009} },
        { uint16_t{0x0035}, uint16_t{0x000a} },
        { uint16_t{0x0036}, uint16_t{0x000b} },
        { uint16_t{0x0037}, uint16_t{0x000c} },
        { uint16_t{0x0038}, uint16_t{0x000d} },
        { uint16_t{0x0039}, uint16_t{0x000e} },
        { uint16_t{0x003f}, uint16_t{0x000f} },
        { uint16_t{0x0041}, uint16_t{0x0010} },
        { uint16_t{0x0042}, uint16_t{0x0011} },
        { uint16_t{0x0043}, uint16_t{0x0012} },
        { uint16_t{0x0044}, uint16_t{0x0013} },
        { uint16_t{0x0045}, uint16_t{0x0014} },
        { uint16_t{0x0046}, uint16_t{0x0015} },
        { uint16_t{0x0047}, uint16_t{0x0016} },
        { uint16_t{0x0048}, uint16_t{0x0017} },
        { uint16_t{0x0049}, uint16_t{0x0018} },
        { uint16_t{0x004a}, uint16_t{0x0019} },
        { uint16_t{0x004b}, uint16_t{0x001a} },
        { uint16_t{0x004c}, uint16_t{0x001b} },
        { uint16_t{0x004d}, uint16_t{0x001c} },
        { uint16_t{0x004e}, uint16_t{0x001d} },
        { uint16_t{0x004f}, uint16_t{0x001e} },
        { uint16_t{0x0050}, uint16_t{0x001f} },
        { uint16_t{0x0051}, uint16_t{0x0020} },
        { uint16_t{0x0052}, uint16_t{0x0021} },
        { uint16_t{0x0053}, uint16_t{0x0022} },
        { uint16_t{0x0054}, uint16_t{0x0023} },
        { uint16_t{0x0055}, uint16_t{0x0024} },
        { uint16_t{0x0056}, uint16_t{0x0025} },
        { uint16_t{0x0057}, uint16_t{0x0026} },
        { uint16_t{0x0058}, uint16_t{0x0027} },
        { uint16_t{0x0059}, uint16_t{0x0028} },
        { uint16_t{0x005a}, uint16_t{0x0029} },
        { uint16_t{0x0061}, uint16_t{0x002a} },
        { uint16_t{0x0062}, uint16_t{0x002b} },
        { uint16_t{0x0063}, uint16_t{0x002c} },
        { uint16_t{0x0064}, uint16_t{0x002d} },
        { uint16_t{0x0065}, uint16_t{0x002e} },
        { uint16_t{0x0066}, uint16_t{0x002f} },
        { uint16_t{0x0067}, uint16_t{0x0030} },
        { uint16_t{0x0068}, uint16_t{0x0031} },
        { uint16_t{0x0069}, uint16_t{0x0032} },
        { uint16_t{0x006a}, uint16_t{0x0033} },
        { uint16_t{0x006b}, uint16_t{0x0034} },
        { uint16_t{0x006c}, uint16_t{0x0035} },
        { uint16_t{0x006d}, uint16_t{0x0036} },
        { uint16_t{0x006e}, uint16_t{0x0037} },
        { uint16_t{0x006f}, uint16_t{0x0038} },
        { uint16_t{0x0070}, uint16_t{0x0039} },
        { uint16_t{0x0071}, uint16_t{0x003a} },
        { uint16_t{0x0072}, uint16_t{0x003b} },
        { uint16_t{0x0073}, uint16_t{0x003c} },
        { uint16_t{0x0074}, uint16_t{0x003d} },
        { uint16_t{0x0075}, uint16_t{0x003e} },
        { uint16_t{0x0076}, uint16_t{0x003f} },
        { uint16_t{0x0077}, uint16_t{0x0040} },
        { uint16_t{0x0078}, uint16_t{0x0041} },
        { uint16_t{0x0079}, uint16_t{0x0042} },
        { uint16_t{0x007a}, uint16_t{0x0043} },
        { uint16_t{0x2019}, uint16_t{0x0044} }
    }};

    static constexpr hextree<hextree<0, uint16_t>::size(glyph_table), uint16_t> glyph_tree{glyph_table};

    using kerning_lookup_type = uint8_t;
    using kerning_amount_type = int8_t;
    static constexpr size_t kerning_code_shift = 4;
    static constexpr size_t kerning_amount_offset = 0x40;
    static constexpr hextree<0, uint8_t> kerning_tree{};

    using char_info_type = int8_t;
    static constexpr std::array<char_info<int8_t>, 69> char_table{{
        { int8_t{   2}, int8_t{  62}, int8_t{   1}, int8_t{   1}, int8_t{   2}, int8_t{   0}, int8_t{  11} },
        { int8_t{  92}, int8_t{   0}, int8_t{   3}, int8_t{   9}, int8_t{   4}, int8_t{   0}, int8_t{   2} },
        { int8_t{  49}, int8_t{  48}, int8_t{   9}, int8_t{   9}, int8_t{  10}, int8_t{   0}, int8_t{   2} },
        { int8_t{   0}, int8_t{  60}, int8_t{   5}, int8_t{   2}, int8_t{   6}, int8_t{   0}, int8_t{   5} },
        { int8_t{   0}, int8_t{  62}, int8_t{   2}, int8_t{   2}, int8_t{   3}, int8_t{   0}, int8_t{   9} },
        { int8_t{  65}, int8_t{  36}, int8_t{   8}, int8_t{   9}, int8_t{   9}, int8_t{   0}, int8_t{   2} },
        { int8_t{  91}, int8_t{  18}, int8_t{   3}, int8_t{   9}, int8_t{   4}, int8_t{   0}, int8_t{   2} },
        { int8_t{  83}, int8_t{  54}, int8_t{   7}, int8_t{   9}, int8_t{   8}, int8_t{   0}, int8_t{   2} },
        { int8_t{  90}, int8_t{  54}, int8_t{   7}, int8_t{   9}, int8_t{   8}, int8_t{   0}, int8_t{   2} },
        { int8_t{  50}, int8_t{  12}, int8_t{   9}, int8_t{   9}, int8_t{  10}, int8_t{   0}, int8_t{   2} },
        { int8_t{  84}, int8_t{   9}, int8_t{   7}, int8_t{   9}, int8_t{   8}, int8_t{   0}, int8_t{   2} },
        { int8_t{  51}, int8_t{   0}, int8_t{   9}, int8_t{   9}, int8_t{  10}, int8_t{   0}, int8_t{   2} },
        { int8_t{  67}, int8_t{  45}, int8_t{   8}, int8_t{   9}, int8_t{   9}, int8_t{   0}, int8_t{   2} },
        { int8_t{  50}, int8_t{  21}, int8_t{   9}, int8_t{   9}, int8_t{  10}, int8_t{   0}, int8_t{   2} },
        { int8_t{  50}, int8_t{  30}, int8_t{   9}, int8_t{   9}, int8_t{  10}, int8_t{   0}, int8_t{   2} },
        { int8_t{  67}, int8_t{  54}, int8_t{   8}, int8_t{   9}, int8_t{   9}, int8_t{   0}, int8_t{   2} },
        { int8_t{  11}, int8_t{  25}, int8_t{  10}, int8_t{  12}, int8_t{  11}, int8_t{   0}, int8_t{   1} },
        { int8_t{  11}, int8_t{  37}, int8_t{  10}, int8_t{  12}, int8_t{  11}, int8_t{   0}, int8_t{   1} },
        { int8_t{  11}, int8_t{  49}, int8_t{  10}, int8_t{  12}, int8_t{  11}, int8_t{   0}, int8_t{   1} },
        { int8_t{  31}, int8_t{  48}, int8_t{   9}, int8_t{  12}, int8_t{  10}, int8_t{   0}, int8_t{   1} },
        { int8_t{  40}, int8_t{  48}, int8_t{   9}, int8_t{  12}, int8_t{  10}, int8_t{   0}, int8_t{   1} },
        { int8_t{  41}, int8_t{  12}, int8_t{   9}, int8_t{  12}, int8_t{  10}, int8_t{   0}, int8_t{   1} },
        { int8_t{  21}, int8_t{  12}, int8_t{  10}, int8_t{  12}, int8_t{  11}, int8_t{   0}, int8_t{   1} },
        { int8_t{  11}, int8_t{  12}, int8_t{  10}, int8_t{  13}, int8_t{  11}, int8_t{   0}, int8_t{   0} },
        { int8_t{  59}, int8_t{  36}, int8_t{   6}, int8_t{  12}, int8_t{   7}, int8_t{   0}, int8_t{   1} },
        { int8_t{  22}, int8_t{   0}, int8_t{  10}, int8_t{  12}, int8_t{  11}, int8_t{   0}, int8_t{   1} },
        { int8_t{  42}, int8_t{   0}, int8_t{   9}, int8_t{  12}, int8_t{  10}, int8_t{   0}, int8_t{   1} },
        { int8_t{  21}, int8_t{  24}, int8_t{  10}, int8_t{  12}, int8_t{  11}, int8_t{   0}, int8_t{   1} },
        { int8_t{   0}, int8_t{   0}, int8_t{  11}, int8_t{  12}, int8_t{  12}, int8_t{   0}, int8_t{   1} },
        { int8_t{  21}, int8_t{  36}, int8_t{  10}, int8_t{  12}, int8_t{  11}, int8_t{   0}, int8_t{   1} },
        { int8_t{  21}, int8_t{  48}, int8_t{  10}, int8_t{  12}, int8_t{  11}, int8_t{   0}, int8_t{   1} },
        { int8_t{  41}, int8_t{  24}, int8_t{   9}, int8_t{  12}, int8_t{  10}, int8_t{   0}, int8_t{   1} },
        { int8_t{   0}, int8_t{  12}, int8_t{  11}, int8_t{  12}, int8_t{  12}, int8_t{   0}, int8_t{   1} },
        { int8_t{  31}, int8_t{  12}, int8_t{  10}, int8_t{  12}, int8_t{  11}, int8_t{   0}, int8_t{   1} },
        { int8_t{  32}, int8_t{   0}, int8_t{  10}, int8_t{  12}, int8_t{  11}, int8_t{   0}, int8_t{   1} },
        { int8_t{  31}, int8_t{  24}, int8_t{  10}, int8_t{  12}, int8_t{  11}, int8_t{   0}, int8_t{   1} },
        { int8_t{   0}, int8_t{  24}, int8_t{  11}, int8_t{  12}, int8_t{  12}, int8_t{   0}, int8_t{   1} },
        { int8_t{   0}, int8_t{  36}, int8_t{  11}, int8_t{  12}, int8_t{  12}, int8_t{   0}, int8_t{   1} },
        { int8_t{   0}, int8_t{  48}, int8_t{  11}, int8_t{  12}, int8_t{  12}, int8_t{   0}, int8_t{   1} },
        { int8_t{  31}, int8_t{  36}, int8_t{  10}, int8_t{  12}, int8_t{  11}, int8_t{   0}, int8_t{   1} },
        { int8_t{  11}, int8_t{   0}, int8_t{  11}, int8_t{  12}, int8_t{  12}, int8_t{   0}, int8_t{   1} },
        { int8_t{  41}, int8_t{  36}, int8_t{   9}, int8_t{  12}, int8_t{  10}, int8_t{   0}, int8_t{   1} },
        { int8_t{  68}, int8_t{   9}, int8_t{   8}, int8_t{   9}, int8_t{   9}, int8_t{   0}, int8_t{   2} },
        { int8_t{  69}, int8_t{   0}, int8_t{   8}, int8_t{   9}, int8_t{   9}, int8_t{   0}, int8_t{   2} },
        { int8_t{  68}, int8_t{  18}, int8_t{   8}, int8_t{   9}, int8_t{   9}, int8_t{   0}, int8_t{   2} },
        { int8_t{  85}, int8_t{   0}, int8_t{   7}, int8_t{   9}, int8_t{   8}, int8_t{   0}, int8_t{   2} },
        { int8_t{  84}, int8_t{  18}, int8_t{   7}, int8_t{   9}, int8_t{   8}, int8_t{   0}, int8_t{   2} },
        { int8_t{  84}, int8_t{  27}, int8_t{   7}, int8_t{   9}, int8_t{   8}, int8_t{   0}, int8_t{   2} },
        { int8_t{  68}, int8_t{  27}, int8_t{   8}, int8_t{   9}, int8_t{   9}, int8_t{   0}, int8_t{   2} },
        { int8_t{  73}, int8_t{  36}, int8_t{   8}, int8_t{   9}, int8_t{   9}, int8_t{   0}, int8_t{   2} },
        { int8_t{  91}, int8_t{   9}, int8_t{   4}, int8_t{   9}, int8_t{   5}, int8_t{   0}, int8_t{   2} },
        { int8_t{  75}, int8_t{  45}, int8_t{   8}, int8_t{   9}, int8_t{   9}, int8_t{   0}, int8_t{   2} },
        { int8_t{  89}, int8_t{  36}, int8_t{   7}, int8_t{   9}, int8_t{   8}, int8_t{   0}, int8_t{   2} },
        { int8_t{  75}, int8_t{  54}, int8_t{   8}, int8_t{   9}, int8_t{   9}, int8_t{   0}, int8_t{   2} },
        { int8_t{  50}, int8_t{  39}, int8_t{   9}, int8_t{   9}, int8_t{  10}, int8_t{   0}, int8_t{   2} },
        { int8_t{  76}, int8_t{   9}, int8_t{   8}, int8_t{   9}, int8_t{   9}, int8_t{   0}, int8_t{   2} },
        { int8_t{  77}, int8_t{   0}, int8_t{   8}, int8_t{   9}, int8_t{   9}, int8_t{   0}, int8_t{   2} },
        { int8_t{  91}, int8_t{  45}, int8_t{   7}, int8_t{   9}, int8_t{   8}, int8_t{   0}, int8_t{   2} },
        { int8_t{  58}, int8_t{  48}, int8_t{   9}, int8_t{   9}, int8_t{  10}, int8_t{   0}, int8_t{   2} },
        { int8_t{  76}, int8_t{  18}, int8_t{   8}, int8_t{   9}, int8_t{   9}, int8_t{   0}, int8_t{   2} },
        { int8_t{  76}, int8_t{  27}, int8_t{   8}, int8_t{   9}, int8_t{   9}, int8_t{   0}, int8_t{   2} },
        { int8_t{  81}, int8_t{  36}, int8_t{   8}, int8_t{   9}, int8_t{   9}, int8_t{   0}, int8_t{   2} },
        { int8_t{  59}, int8_t{   9}, int8_t{   9}, int8_t{   9}, int8_t{  10}, int8_t{   0}, int8_t{   2} },
        { int8_t{  60}, int8_t{   0}, int8_t{   9}, int8_t{   9}, int8_t{  10}, int8_t{   0}, int8_t{   2} },
        { int8_t{  59}, int8_t{  18}, int8_t{   9}, int8_t{   9}, int8_t{  10}, int8_t{   0}, int8_t{   2} },
        { int8_t{  83}, int8_t{  45}, int8_t{   8}, int8_t{   9}, int8_t{   9}, int8_t{   0}, int8_t{   2} },
        { int8_t{  59}, int8_t{  27}, int8_t{   9}, int8_t{   9}, int8_t{  10}, int8_t{   0}, int8_t{   2} },
        { int8_t{  97}, int8_t{  54}, int8_t{   7}, int8_t{   9}, int8_t{   8}, int8_t{   0}, int8_t{   2} },
        { int8_t{   5}, int8_t{  60}, int8_t{   2}, int8_t{   4}, int8_t{   3}, int8_t{   0}, int8_t{   2} }
    }};

    static constexpr bool mono = true;
    static constexpr size_t glyph_bitmap_width = 104;
    static constexpr size_t glyph_bitmap_height = 64;
    static constexpr size_t glyph_bitmap_stride = 13;

    static constexpr std::array<uint8_t, 832> glyph_bitmap{{
        0x7b,0xce,0x38,0x1f,0x3f,0xbd,0xc1,0x04,0x17,0xe0,0xe7,0x8e,0x00,0x4a,0x5b,0x6c,
        0x11,0x60,0xe7,0x63,0x8c,0x1f,0xf1,0xf7,0xce,0x00,0x4a,0x51,0xc4,0x11,0xc0,0x66,
        0x27,0x0e,0x3e,0x33,0x3e,0x6e,0x00,0x4e,0x58,0x8c,0x19,0x8e,0xe4,0x6e,0x06,0x36,
        0x26,0x1e,0x3c,0x00,0x44,0x5c,0x18,0x09,0xc7,0xe0,0xff,0xe7,0x77,0xf6,0x1e,0x3c,
        0x00,0x40,0x4e,0x39,0xc9,0xf0,0xe1,0xdc,0x73,0x66,0x3e,0x1e,0x7c,0x00,0xc0,0x66,
        0x33,0x79,0xdc,0x60,0xdc,0x73,0xe6,0x3f,0x3e,0xe0,0x00,0x91,0x22,0x22,0x31,0x8e,
        0x64,0x6f,0xe1,0xc7,0xf3,0xf7,0xcc,0x00,0x9b,0x22,0x23,0x03,0xc0,0x66,0x27,0xc1,
        0xc7,0xe1,0xe7,0x8c,0x00,0x9f,0x22,0x23,0x87,0xe0,0xe7,0x60,0x18,0x01,0xc4,0x3f,
        0xde,0x00,0xff,0xe3,0xe1,0xfe,0x7f,0xff,0xe0,0x18,0x31,0xee,0x3f,0xde,0x00,0xf1,
        0xe3,0xe0,0xfc,0x3f,0xbd,0xc0,0x18,0x33,0xff,0x38,0x1e,0x00,0x3f,0x1f,0x78,0xf9,
        0xfe,0x7f,0xc2,0x18,0x32,0x3f,0xb8,0x1c,0x00,0x61,0x91,0x49,0x8d,0x03,0x40,0x47,
        0x18,0x36,0x3d,0xff,0xdc,0x00,0xc0,0xd1,0x4b,0x07,0x01,0xc0,0x4e,0x18,0x36,0x3c,
        0xf0,0xfc,0x00,0x8c,0x51,0x4e,0x63,0x3c,0xcf,0xdd,0x9c,0x7f,0xfc,0x70,0xf8,0x00,
        0x9e,0x51,0xcc,0xff,0x3c,0xcf,0xb9,0x8f,0xee,0x7c,0x3f,0xd8,0x00,0x9e,0x50,0x0c,
        0xc3,0x39,0xc0,0xb1,0x87,0xce,0x7c,0x0f,0x98,0x00,0x98,0x50,0x0c,0xf3,0x03,0xcf,
        0x9f,0xf8,0x31,0xcf,0xcf,0xfc,0x00,0x8c,0x70,0x0c,0x63,0x31,0xcf,0x8f,0xf8,0x33,
        0xef,0xef,0xfc,0x00,0xc0,0x33,0xce,0x07,0x38,0xc8,0x01,0x98,0x36,0x7c,0x3c,0x0c,
        0x00,0xe1,0x73,0xcf,0x0f,0x3d,0xc8,0x0f,0x99,0x3c,0x2c,0x3c,0x0c,0x00,0x7f,0xf2,
        0x4b,0xfd,0xef,0xf8,0x18,0xdb,0xbc,0x0c,0x6f,0xcc,0x00,0x3f,0xde,0x79,0xf9,0xe7,
        0x78,0x38,0xff,0xfc,0x2f,0xcc,0x0c,0x00,0xf0,0x1e,0x79,0xe1,0xff,0xff,0x1f,0xce,
        0xee,0x7c,0xec,0x0c,0x00,0x91,0xe3,0xe1,0x21,0x00,0xc1,0x8f,0x8c,0x67,0xec,0x7f,
        0xec,0x00,0x91,0x22,0x31,0x21,0x00,0xc0,0xd8,0xc8,0x23,0xcc,0x2f,0xec,0x00,0x91,
        0x26,0x1b,0x21,0xe7,0xce,0x78,0xe8,0x21,0xc3,0xef,0xe0,0x00,0x91,0x24,0x0a,0x21,
        0xe7,0xce,0x5f,0xdc,0x73,0xe7,0xff,0xe0,0x00,0x91,0x2d,0xca,0x60,0x24,0x4e,0x4f,
        0x8e,0xe6,0x7e,0x2c,0x00,0x00,0x9f,0x29,0xce,0x60,0x64,0x40,0xcf,0x87,0xcc,0x07,
        0x0c,0x00,0x00,0x8e,0x39,0xcc,0x7e,0x44,0x4f,0xdf,0xc3,0x8c,0xf1,0xef,0xc0,0x00,
        0xc0,0x70,0x0c,0x02,0x44,0x4f,0xb8,0xe3,0x8c,0x34,0x7c,0x00,0x00,0xe0,0xf1,0x8c,
        0x02,0x44,0x48,0x38,0xe3,0x8e,0x7e,0x3c,0x00,0x00,0x7f,0xd1,0x8f,0xfe,0x7c,0x78,
        0x1f,0xc3,0x87,0xe7,0xfc,0x00,0x00,0x3f,0x9f,0xff,0xfe,0x7c,0x78,0x01,0x83,0x83,
        0xc3,0xec,0x00,0x00,0x71,0xdf,0xfb,0x9e,0xe7,0x7f,0x81,0x9f,0x9e,0x71,0xff,0xe2,
        0x00,0xd1,0x7f,0xe6,0xd3,0xbd,0xc0,0xc3,0x10,0xbf,0x71,0xff,0xe7,0x00,0x9b,0x30,
        0x34,0x73,0x18,0xc0,0x43,0x10,0xf3,0xf1,0x8c,0x6e,0x00,0x8a,0x30,0x14,0x33,0x81,
        0xfc,0x58,0xd0,0xe1,0xf1,0x8c,0x7c,0x00,0xce,0x73,0x94,0x13,0xc3,0xf8,0xd8,0xd1,
        0xe1,0xff,0x8c,0x78,0x00,0xc4,0x73,0xb4,0x82,0xe7,0x31,0xd8,0xd1,0xe1,0xff,0x8c,
        0x7c,0x00,0x64,0xd0,0x1c,0xc2,0xc3,0x63,0x9d,0xd1,0x73,0xe1,0x9c,0x6e,0x00,0x60,
        0xd3,0x8c,0xe3,0x81,0xc7,0xdf,0xd3,0x3f,0x61,0x9c,0x67,0x00,0x31,0x93,0x8c,0xf3,
        0x18,0xc0,0x5f,0xd3,0x1e,0x61,0x9c,0x62,0x00,0x31,0x90,0x1c,0xbf,0xbd,0xc0,0x77,
        0x72,0x1f,0x80,0xe8,0x5f,0x00,0x1f,0x10,0x3f,0x9f,0xff,0xff,0xf2,0x7e,0x1f,0xc0,
        0xfc,0xff,0x80,0x1f,0x1f,0xf7,0x80,0xe7,0x7f,0xf0,0x7e,0x18,0xe0,0x6f,0xd8,0xc0,
        0xf1,0xff,0xe0,0xf9,0xf8,0xff,0x9e,0x0f,0x00,0xc0,0x67,0x98,0xc0,0x91,0x23,0xe1,
        0x8d,0x0c,0x80,0xb3,0x1f,0x81,0xc0,0x63,0x18,0xc0,0x91,0x26,0x33,0x07,0x06,0x80,
        0xb3,0x39,0xc1,0x88,0x67,0x9f,0x80,0x9f,0x2c,0x1e,0x63,0x33,0x9f,0x9e,0x30,0xc3,
        0x9c,0xef,0xd8,0x00,0x9b,0x39,0x8c,0xf3,0x39,0x9f,0x36,0xb0,0xc3,0x0f,0xdc,0xf8,
        0x00,0x91,0x33,0xdc,0xf3,0x39,0x81,0x63,0xf3,0xc3,0x07,0x88,0x58,0x00,0x80,0x33,
        0xfc,0xf3,0x31,0x9f,0x63,0xb9,0xc7,0x86,0x1f,0x3e,0x7e,0xc4,0x73,0xdc,0x63,0x23,
        0x9f,0xb7,0xdf,0xef,0xc6,0x1f,0xbf,0x7f,0xce,0x71,0x8e,0x07,0x07,0x80,0x9c,0x8f,
        0x5c,0xe6,0x01,0xc3,0x87,0x5f,0x58,0x1f,0x0f,0x0e,0x80,0x80,0x00,0x09,0xce,0x03,
        0x87,0x0e,0x7b,0xdc,0x3b,0xfd,0xfc,0xff,0x80,0x00,0x03,0x8c,0x07,0x0e,0x1c,0x71,
        0xcf,0xf1,0xf9,0xf8,0xff,0x80,0x00,0x03,0x0c,0x0e,0x07,0x38,0xfe,0x07,0xe0,0x00,
        0x00,0x00,0x00,0x00,0x00,0x1c,0x1c,0x03,0xf0,0xfe,0x00,0x00,0x00,0x00,0x00,0x00,
        0x00,0x03,0x1f,0xff,0xff,0x7f,0xc2,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x1f,
        0xff,0xfe,0x7f,0xc4,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
    }};

};

}
