namespace constixel {

struct sf_compact_rounded_semibold_18_mono {

    static constexpr std::array<std::pair<uint16_t, uint16_t>, 95> glyph_table{{
        { 0x000020, 0x000000 },
        { 0x000041, 0x000001 },
        { 0x000042, 0x000002 },
        { 0x000043, 0x000003 },
        { 0x000044, 0x000004 },
        { 0x000045, 0x000005 },
        { 0x000046, 0x000006 },
        { 0x000047, 0x000007 },
        { 0x000048, 0x000008 },
        { 0x000049, 0x000009 },
        { 0x00004a, 0x00000a },
        { 0x00004b, 0x00000b },
        { 0x00004c, 0x00000c },
        { 0x00004d, 0x00000d },
        { 0x00004e, 0x00000e },
        { 0x00004f, 0x00000f },
        { 0x000050, 0x000010 },
        { 0x000051, 0x000011 },
        { 0x000052, 0x000012 },
        { 0x000053, 0x000013 },
        { 0x000054, 0x000014 },
        { 0x000055, 0x000015 },
        { 0x000056, 0x000016 },
        { 0x000057, 0x000017 },
        { 0x000058, 0x000018 },
        { 0x000059, 0x000019 },
        { 0x00005a, 0x00001a },
        { 0x000061, 0x00001b },
        { 0x000062, 0x00001c },
        { 0x000063, 0x00001d },
        { 0x000064, 0x00001e },
        { 0x000065, 0x00001f },
        { 0x000066, 0x000020 },
        { 0x000067, 0x000021 },
        { 0x000068, 0x000022 },
        { 0x000069, 0x000023 },
        { 0x00006a, 0x000024 },
        { 0x00006b, 0x000025 },
        { 0x00006c, 0x000026 },
        { 0x00006d, 0x000027 },
        { 0x00006e, 0x000028 },
        { 0x00006f, 0x000029 },
        { 0x000070, 0x00002a },
        { 0x000071, 0x00002b },
        { 0x000072, 0x00002c },
        { 0x000073, 0x00002d },
        { 0x000074, 0x00002e },
        { 0x000075, 0x00002f },
        { 0x000076, 0x000030 },
        { 0x000077, 0x000031 },
        { 0x000078, 0x000032 },
        { 0x000079, 0x000033 },
        { 0x00007a, 0x000034 },
        { 0x000024, 0x000035 },
        { 0x000030, 0x000036 },
        { 0x000031, 0x000037 },
        { 0x000032, 0x000038 },
        { 0x000033, 0x000039 },
        { 0x000034, 0x00003a },
        { 0x000035, 0x00003b },
        { 0x000036, 0x00003c },
        { 0x000037, 0x00003d },
        { 0x000038, 0x00003e },
        { 0x000039, 0x00003f },
        { 0x000026, 0x000040 },
        { 0x000021, 0x000041 },
        { 0x00003f, 0x000042 },
        { 0x000028, 0x000043 },
        { 0x000029, 0x000044 },
        { 0x00005b, 0x000045 },
        { 0x00005d, 0x000046 },
        { 0x00007b, 0x000047 },
        { 0x00007d, 0x000048 },
        { 0x000040, 0x000049 },
        { 0x000023, 0x00004a },
        { 0x00002f, 0x00004b },
        { 0x00007c, 0x00004c },
        { 0x00005c, 0x00004d },
        { 0x00002d, 0x00004e },
        { 0x000027, 0x00004f },
        { 0x000022, 0x000050 },
        { 0x00002c, 0x000051 },
        { 0x00002e, 0x000052 },
        { 0x00003a, 0x000053 },
        { 0x00003b, 0x000054 },
        { 0x00003c, 0x000055 },
        { 0x00003e, 0x000056 },
        { 0x00003d, 0x000057 },
        { 0x00002b, 0x000058 },
        { 0x00007e, 0x000059 },
        { 0x00005f, 0x00005a },
        { 0x00005e, 0x00005b },
        { 0x00002a, 0x00005c },
        { 0x000025, 0x00005d },
        { 0x000060, 0x00005e }
    }};

    static constexpr hextree<hextree<0, uint16_t>::size(glyph_table), uint16_t> glyph_tree{glyph_table};

    static constexpr std::array<char_info, 95> char_table{{
      //     x|    y|    w|    h| xadv| xoff| yoff|
        {   27,   12,    1,    1,    4,    0,   18 },
        {    0,   42,   10,   13,   12,    1,    5 },
        {   25,   30,    9,   13,   11,    1,    5 },
        {    0,   55,   10,   13,   11,    1,    5 },
        {    0,   68,   10,   13,   12,    1,    5 },
        {   38,   56,    8,   13,   10,    1,    5 },
        {   39,   39,    8,   13,   10,    1,    5 },
        {    0,   81,   10,   13,   12,    1,    5 },
        {    0,   94,   10,   13,   12,    1,    5 },
        {   66,   79,    2,   13,    4,    1,    5 },
        {   43,   25,    8,   13,    9,    0,    5 },
        {   20,   56,    9,   13,   10,    1,    5 },
        {   45,   12,    8,   13,    9,    1,    5 },
        {   24,   13,   12,   13,   14,    1,    5 },
        {   20,   69,    9,   13,   11,    1,    5 },
        {    0,  107,   10,   13,   12,    1,    5 },
        {   20,   82,    9,   13,   11,    1,    5 },
        {    0,   28,   10,   14,   12,    1,    5 },
        {   20,   95,    9,   13,   11,    1,    5 },
        {   29,   56,    9,   13,   11,    1,    5 },
        {   10,   44,   10,   13,   10,    0,    5 },
        {   15,   31,   10,   13,   12,    1,    5 },
        {   10,   57,   10,   13,   12,    1,    5 },
        {    0,   15,   15,   13,   17,    1,    5 },
        {   10,   70,   10,   13,   12,    1,    5 },
        {   30,   43,    9,   13,   11,    1,    5 },
        {   34,   26,    9,   13,   11,    1,    5 },
        {   32,  107,    8,   10,   10,    1,    8 },
        {   38,   81,    8,   13,   10,    1,    5 },
        {   33,  117,    8,   10,   10,    1,    8 },
        {   38,   94,    8,   13,   10,    1,    5 },
        {   40,  107,    8,   10,   10,    1,    8 },
        {   57,  114,    6,   13,    8,    1,    5 },
        {   46,   52,    8,   13,   10,    1,    8 },
        {   47,   38,    8,   13,   10,    1,    5 },
        {   70,   10,    2,   13,    4,    1,    5 },
        {   63,  108,    4,   16,    4,   -2,    5 },
        {   51,   25,    8,   13,    9,    1,    5 },
        {   67,   45,    2,   13,    4,    1,    5 },
        {   27,    0,   14,   10,   16,    1,    8 },
        {   41,  117,    8,   10,   10,    1,    8 },
        {   48,  107,    8,   10,   10,    1,    8 },
        {   53,   12,    8,   13,   10,    1,    8 },
        {   46,   81,    8,   13,   10,    1,    8 },
        {   66,   35,    5,   10,    6,    1,    8 },
        {   49,  117,    8,   10,   10,    1,    8 },
        {   60,   80,    6,   13,    8,    1,    5 },
        {   59,   25,    8,   10,   10,    1,    8 },
        {   61,   12,    8,   10,   10,    1,    8 },
        {   10,  109,   13,   10,   15,    1,    8 },
        {   66,    0,    8,   10,   10,    1,    8 },
        {   46,   94,    8,   13,    9,    0,    8 },
        {   61,   98,    7,   10,    9,    1,    8 },
        {   15,   15,    9,   16,   11,    1,    4 },
        {   36,   13,    9,   12,   11,    1,    6 },
        {   62,   51,    5,   12,   11,    2,    6 },
        {   50,    0,    8,   12,   11,    0,    6 },
        {   45,   69,    8,   12,   11,    0,    6 },
        {   20,   44,   10,   12,   11,    0,    5 },
        {   58,    0,    8,   12,   11,    1,    6 },
        {   41,    0,    9,   12,   11,    1,    6 },
        {   29,   85,    9,   12,   11,    1,    6 },
        {   54,   51,    8,   12,   11,    1,    6 },
        {   36,   69,    9,   12,   11,    1,    6 },
        {   10,   83,   10,   13,   12,    1,    5 },
        {   67,   58,    2,   13,    4,    1,    5 },
        {   55,   38,    7,   13,    9,    1,    5 },
        {   67,  108,    4,   16,    7,    2,    5 },
        {   62,   35,    4,   16,    6,    0,    5 },
        {   10,   28,    5,   16,    6,    1,    5 },
        {   56,   98,    5,   16,    6,    0,    5 },
        {   29,   69,    7,   16,    7,    0,    5 },
        {   53,   65,    6,   16,    8,    0,    5 },
        {    0,    0,   14,   15,   16,    1,    5 },
        {   10,   96,   10,   13,   12,    1,    5 },
        {   54,   81,    6,   17,    8,    1,    5 },
        {   65,   63,    2,   16,    6,    2,    5 },
        {   59,   63,    6,   17,    6,    0,    5 },
        {   27,   10,    6,    2,    8,    1,   12 },
        {   63,   93,    2,    5,    4,    0,    5 },
        {   19,  119,    5,    5,    7,    0,    5 },
        {   60,   93,    3,    5,    4,    0,   16 },
        {   33,   10,    2,    3,    4,    1,   15 },
        {   54,   98,    2,    9,    4,    1,    9 },
        {   67,   22,    3,   12,    4,    0,    9 },
        {   23,  108,    9,   10,   10,    1,    8 },
        {   24,  118,    9,   10,   11,    1,    8 },
        {    0,  120,    8,    6,   10,    1,   10 },
        {   29,   97,    9,   10,   11,    1,    8 },
        {   24,   26,    9,    4,   11,    1,   10 },
        {   14,   13,   10,    2,    8,   -1,   19 },
        {    8,  120,    6,    6,    8,    1,    5 },
        {   14,  119,    5,    7,    9,    1,    5 },
        {   14,    0,   13,   13,   15,    1,    4 },
        {   35,   10,    2,    3,    8,    2,    4 }
    }};

    static constexpr bool mono = true;
    static constexpr size_t glyph_bitmap_width = 74;
    static constexpr size_t glyph_bitmap_height = 128;
    static constexpr size_t glyph_bitmap_stride = 10;

    static constexpr std::array<uint8_t, 1280> glyph_bitmap{{
        0x0f,0xc1,0xc0,0x9b,0xcf,0x0f,0x0f,0x3f,0xb0,0xc0,0x1f,0xf3,0xe1,0x9f,0xff,0xbf,
        0xbf,0xbf,0xb9,0xc0,0x38,0x7b,0x63,0x1c,0xf3,0xb1,0xb1,0xf0,0x19,0x80,0x60,0x1b,
        0x62,0x18,0x61,0xe0,0x31,0xf0,0x1f,0x00,0xe0,0x1f,0xe6,0x18,0x61,0xef,0x01,0xb7,
        0x0f,0x00,0xc7,0xcd,0xcc,0x18,0x61,0xff,0x81,0xbf,0x8f,0x00,0xcc,0xcc,0x1b,0xd8,
        0x61,0xf1,0xc3,0x31,0xdf,0x00,0xcc,0xcc,0x17,0xf8,0x61,0xe0,0xc6,0x00,0xd9,0x80,
        0xcc,0xcc,0x36,0x78,0x61,0xe0,0xcc,0x20,0xf9,0xc0,0xcc,0xcc,0x66,0x78,0x61,0xb1,
        0xd8,0x31,0xf0,0xc0,0xef,0xf8,0xc6,0x7f,0xf0,0x3f,0xbf,0xff,0x83,0x00,0x66,0x70,
        0xc7,0xff,0xf8,0x1f,0x3f,0xdf,0x03,0x00,0x38,0x00,0x83,0xc0,0x68,0x06,0x06,0xe6,
        0x18,0x00,0x1f,0xc3,0xff,0xe0,0x73,0xe6,0x07,0xf6,0x1b,0x00,0x0f,0xc3,0xff,0xe0,
        0x77,0xf6,0x07,0x3f,0x3b,0x00,0xc1,0x86,0x30,0xe0,0x76,0x36,0x06,0x1b,0x33,0x00,
        0xc3,0x86,0x78,0xf0,0xfc,0x1e,0x06,0x1b,0x33,0x00,0xe3,0x8e,0xfe,0xf0,0xfc,0x1e,
        0x06,0x1b,0x33,0x00,0xe3,0x8f,0xc7,0xd9,0xfc,0x1e,0x06,0x19,0xe3,0x00,0x66,0xcd,
        0x83,0xd9,0xbc,0x1e,0x07,0x39,0xe3,0x00,0x66,0xcd,0x80,0xd9,0xbc,0x1e,0x07,0xf1,
        0xe3,0x00,0x76,0xdd,0xe0,0xcf,0x3c,0x1e,0x06,0xe0,0xc3,0x00,0x36,0xd8,0xfc,0xcf,
        0x36,0x36,0x06,0x00,0x1b,0x00,0x34,0x78,0x7e,0xc6,0x37,0xf7,0xf6,0x00,0x18,0x00,
        0x3c,0x78,0x0f,0xc6,0x33,0xe7,0xf6,0x00,0x18,0x00,0x3c,0x78,0x03,0xc0,0x30,0x00,
        0x78,0x18,0x60,0x00,0x1c,0x71,0x83,0x71,0xbf,0xe0,0x78,0x18,0x60,0x00,0x18,0x31,
        0xc7,0xf9,0xbf,0xe0,0x78,0x18,0x60,0x00,0x1e,0x3e,0xfe,0xcf,0x80,0xe0,0x78,0xd8,
        0x60,0x00,0x7f,0xbe,0x78,0xc7,0x01,0xc0,0x79,0xd8,0x68,0x00,0x61,0xb0,0x30,0x7f,
        0x01,0x80,0x7b,0x98,0x78,0x00,0xc0,0xf1,0x81,0xff,0x83,0x80,0x7f,0x18,0x78,0x00,
        0xc0,0xf1,0x81,0xe1,0x87,0x00,0x7f,0x18,0xf8,0x00,0xc0,0xf1,0x81,0xe1,0x8e,0x00,
        0x7f,0x1f,0xf0,0x00,0xc0,0xf1,0x81,0xe1,0x8e,0x08,0x7b,0x8f,0x60,0x00,0xc0,0xf1,
        0x81,0xe3,0x9c,0x0c,0x79,0xc1,0x36,0x00,0xc0,0xf1,0x81,0xff,0x38,0x0f,0xd8,0xe1,
        0xbe,0x00,0xc7,0xf1,0x81,0xff,0xbf,0xe7,0x98,0x41,0xb8,0x00,0x67,0xb1,0x81,0xe1,
        0xff,0xe1,0x80,0xf1,0xb0,0x00,0x7f,0xb1,0x81,0xe0,0xc1,0xff,0x81,0xf8,0xf0,0x00,
        0x1f,0xb1,0x81,0xe0,0xc1,0xff,0x81,0x8c,0xf0,0x00,0x00,0xb1,0xc3,0xff,0x81,0x81,
        0xbd,0x0c,0xf0,0x00,0x0c,0x3e,0xff,0x7f,0x01,0x81,0xfe,0x0c,0xf0,0x00,0x1e,0x3e,
        0x7c,0x03,0x07,0x81,0xce,0x18,0xf0,0x00,0x1e,0x3f,0xf0,0x73,0x87,0x81,0x86,0x38,
        0xf0,0x00,0x1e,0x3f,0xf0,0xf1,0x8f,0xfd,0x86,0x70,0xd8,0x00,0x33,0x03,0x01,0xf1,
        0xcd,0xfd,0x86,0x60,0xd8,0x00,0x33,0x03,0x01,0xb0,0xdd,0x81,0x86,0x21,0x98,0x00,
        0x33,0x03,0x03,0x30,0x79,0x81,0x86,0x01,0x98,0x00,0x73,0x83,0x07,0x30,0x79,0x81,
        0x86,0x61,0x98,0x00,0x7f,0x83,0x06,0x30,0x31,0x81,0x86,0x61,0x18,0x00,0x7f,0x83,
        0x0e,0x30,0x31,0x80,0x00,0xf0,0xf8,0x00,0xe1,0xc3,0x0f,0xfc,0x30,0x00,0xed,0x9d,
        0xf8,0x00,0xc0,0xc3,0x0f,0xfc,0x30,0x01,0xff,0x0f,0xf8,0x00,0xc0,0xc3,0x00,0x30,
        0x30,0x03,0x9f,0x0c,0x78,0x00,0x1e,0x03,0x00,0x30,0x30,0x03,0x0d,0x98,0x78,0x00,
        0x7f,0x83,0x0c,0x11,0xf3,0xff,0x0c,0xf0,0x78,0x00,0x63,0xb0,0x3c,0x33,0xfb,0xff,
        0x0d,0x8c,0x78,0x00,0xc1,0xb0,0x3c,0x77,0x1f,0x03,0x0f,0x0c,0x78,0x00,0xc0,0x38,
        0x7c,0xe6,0x0b,0x03,0x9f,0x0c,0x78,0x00,0xc0,0x18,0x6d,0xc6,0x03,0x01,0xff,0x0c,
        0x78,0x00,0xc0,0x18,0x6f,0x87,0xc3,0x00,0xed,0x8c,0x78,0x00,0xc0,0x1c,0xef,0xc3,
        0xfb,0xf9,0x0c,0xf8,0x78,0x00,0xc0,0x0c,0xcf,0xc0,0x7f,0xfb,0xf8,0x18,0x78,0x00,
        0xc1,0x8c,0xcc,0xe0,0x0f,0x01,0xf0,0x18,0x78,0x00,0x63,0x8f,0xcc,0x76,0x0f,0x00,
        0x07,0x0c,0x78,0x00,0x7f,0x87,0x8c,0x77,0x0f,0x00,0x07,0x8c,0x78,0x00,0x1e,0x07,
        0x8c,0x3b,0xfb,0xfc,0x01,0x8c,0x60,0x00,0xfe,0x07,0x8c,0x19,0xf3,0xfc,0x01,0x8e,
        0x60,0x00,0xff,0x03,0x0c,0x18,0xe3,0xe1,0xe1,0x86,0x78,0x00,0xc3,0xb0,0x3e,0x19,
        0xe7,0xf3,0xf1,0x86,0x78,0x00,0xc1,0xf8,0x7e,0x19,0x8e,0x37,0x19,0xc6,0x60,0x00,
        0xc0,0xd8,0x6f,0x19,0x8c,0x1a,0x18,0xe7,0x60,0x00,0xc0,0xdc,0xef,0x19,0x8c,0x18,
        0x19,0xe3,0x60,0x00,0xc0,0xcf,0xcd,0x99,0x8e,0x38,0xf1,0x83,0x60,0x00,0xc0,0xc7,
        0x8d,0xd9,0x87,0xf8,0xf1,0x83,0x60,0x00,0xc0,0xc7,0x0c,0xdb,0x03,0xd8,0x19,0x81,
        0xe0,0x00,0xc1,0xc7,0x8c,0x7b,0x80,0x1c,0x19,0x81,0xe0,0x00,0xc3,0x8f,0xcc,0x79,
        0x86,0x36,0x19,0x81,0xe0,0x00,0xff,0x1c,0xec,0x39,0x87,0xf7,0xff,0x80,0x30,0x00,
        0xfe,0x18,0xec,0x39,0x83,0xe1,0xe7,0x03,0x30,0x00,0x1f,0x38,0x7c,0x19,0x83,0x00,
        0xec,0x33,0x30,0x00,0x7f,0xb0,0x3f,0xe1,0x83,0x01,0xfc,0x33,0x30,0x00,0x61,0xcf,
        0x8f,0xf1,0xe3,0x03,0x9c,0x7f,0xf0,0x00,0xc0,0xdf,0xcc,0x38,0xe3,0x73,0x0c,0x6f,
        0xf0,0x00,0xc0,0x18,0xcc,0x1f,0xff,0xfb,0x0c,0x63,0x30,0x00,0xc0,0x18,0xcc,0x1f,
        0xff,0x9f,0x0c,0x63,0x30,0x00,0xc7,0xc8,0x8c,0x18,0x1f,0x0f,0x0c,0xe3,0x30,0x00,
        0xc7,0xcf,0x3c,0x38,0x1b,0x0f,0x9c,0xc3,0x30,0x00,0xc0,0xdf,0x3f,0xf0,0x3b,0x0d,
        0xfc,0xc3,0x30,0x00,0xc0,0xdb,0xbf,0xe0,0x33,0x0c,0xec,0xc3,0x30,0x00,0x61,0xf1,
        0xfc,0x00,0x73,0x9c,0x0d,0x83,0xf0,0x00,0x7f,0xb0,0xec,0x00,0x63,0xf8,0x0d,0x81,
        0xc0,0x00,0x1f,0x38,0xec,0x00,0xe3,0x70,0x0d,0x8d,0x80,0x00,0xc0,0xdf,0xfc,0x00,
        0xc0,0x0f,0x0f,0x8d,0x80,0x00,0xc0,0xcf,0x1f,0xe1,0xc0,0x0f,0x0f,0x0d,0x80,0x00,
        0xc0,0xc6,0x6f,0xf1,0x80,0x0f,0x1f,0x0d,0x80,0x00,0xc0,0xc6,0x4c,0x38,0x60,0xef,
        0x98,0x09,0x80,0x00,0xc0,0xc6,0x4c,0x18,0x61,0xfd,0x9b,0xff,0xf0,0x00,0xff,0xdf,
        0xfc,0x18,0x63,0x9d,0xbb,0xff,0xf0,0x00,0xff,0xdf,0xfc,0x38,0x63,0x0d,0xf3,0x18,
        0x60,0x00,0xc0,0xcc,0xcf,0xf7,0xff,0x0c,0xf0,0x18,0xe0,0x00,0xc0,0xcc,0xcf,0xe7,
        0xff,0x0c,0xf0,0x18,0xc0,0x00,0xc0,0xcc,0x8c,0x70,0x63,0x0c,0xe0,0x19,0x80,0x00,
        0xc0,0xff,0xec,0x70,0x63,0x9c,0xe3,0x1b,0x80,0x00,0xc0,0xff,0xec,0x38,0x61,0xff,
        0xc3,0x1b,0x00,0x00,0xc0,0xc9,0x8c,0x38,0x60,0xef,0x83,0x1f,0xf0,0x00,0x1e,0x19,
        0x8c,0x18,0x3c,0x3c,0x3c,0x1f,0xf0,0x00,0x7f,0x99,0x00,0x06,0x7f,0x7e,0x7e,0x18,
        0x66,0x00,0x61,0xb1,0xc6,0x1e,0x63,0xe7,0xe7,0x18,0x66,0x00,0xc0,0xf1,0xc6,0x3c,
        0x03,0xc3,0xc3,0x18,0x0c,0x00,0xc0,0xf9,0xce,0xf0,0x7f,0xff,0xc3,0x18,0x6c,0x00,
        0xc0,0xd9,0x4d,0xc0,0xff,0xff,0xc3,0xf8,0x78,0x00,0xc0,0xdb,0x6d,0xc0,0xc3,0xc0,
        0xc3,0xf8,0x78,0x00,0xc0,0xdb,0x6c,0xf0,0xc3,0xe2,0xe7,0x0e,0x78,0x00,0xc0,0xdb,
        0x6c,0x3c,0xff,0x7f,0x7e,0x1e,0x78,0x00,0xc0,0xce,0x38,0x1e,0x7b,0x3c,0x3c,0x18,
        0x78,0x00,0x61,0x8e,0x38,0x06,0x1f,0x6f,0x1e,0x7e,0x78,0x00,0x7f,0x8e,0x38,0xc0,
        0x3f,0xff,0xff,0xfe,0x78,0x00,0x1e,0x00,0x9b,0xf0,0x71,0xf3,0xe3,0x98,0x7c,0x00,
        0xff,0x00,0x9b,0x7c,0x60,0x61,0xe0,0x18,0x6c,0x00,0xff,0x32,0xbb,0x1f,0x60,0x61,
        0xbc,0x18,0x6c,0x00,0x00,0x79,0xdb,0x07,0x60,0x61,0x8f,0x19,0xe6,0x00,0x00,0x49,
        0xdb,0x07,0x60,0x61,0x81,0x99,0xc6,0x00,0xff,0xce,0xa0,0x1f,0x71,0xe1,0xe1,0x98,
        0x00,0x00,0xff,0xcc,0x80,0x7c,0x3f,0xe1,0xff,0x98,0x00,0x00,0x00,0x00,0x00,0xf0,
        0x1f,0x61,0xbe,0x18,0x00,0x00,0x00,0x00,0x00,0xc0,0x00,0x00,0x00,0x00,0x00,0x00
        }};

};

}
