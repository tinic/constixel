namespace constixel {

struct sf_compact_rounded_heavy_18_mono {

    static constexpr std::array<std::pair<uint16_t, uint16_t>, 95> glyph_table{{
        { 0x000020, 0x000000 },
        { 0x000041, 0x000001 },
        { 0x000042, 0x000002 },
        { 0x000043, 0x000003 },
        { 0x000044, 0x000004 },
        { 0x000045, 0x000005 },
        { 0x000046, 0x000006 },
        { 0x000047, 0x000007 },
        { 0x000048, 0x000008 },
        { 0x000049, 0x000009 },
        { 0x00004a, 0x00000a },
        { 0x00004b, 0x00000b },
        { 0x00004c, 0x00000c },
        { 0x00004d, 0x00000d },
        { 0x00004e, 0x00000e },
        { 0x00004f, 0x00000f },
        { 0x000050, 0x000010 },
        { 0x000051, 0x000011 },
        { 0x000052, 0x000012 },
        { 0x000053, 0x000013 },
        { 0x000054, 0x000014 },
        { 0x000055, 0x000015 },
        { 0x000056, 0x000016 },
        { 0x000057, 0x000017 },
        { 0x000058, 0x000018 },
        { 0x000059, 0x000019 },
        { 0x00005a, 0x00001a },
        { 0x000061, 0x00001b },
        { 0x000062, 0x00001c },
        { 0x000063, 0x00001d },
        { 0x000064, 0x00001e },
        { 0x000065, 0x00001f },
        { 0x000066, 0x000020 },
        { 0x000067, 0x000021 },
        { 0x000068, 0x000022 },
        { 0x000069, 0x000023 },
        { 0x00006a, 0x000024 },
        { 0x00006b, 0x000025 },
        { 0x00006c, 0x000026 },
        { 0x00006d, 0x000027 },
        { 0x00006e, 0x000028 },
        { 0x00006f, 0x000029 },
        { 0x000070, 0x00002a },
        { 0x000071, 0x00002b },
        { 0x000072, 0x00002c },
        { 0x000073, 0x00002d },
        { 0x000074, 0x00002e },
        { 0x000075, 0x00002f },
        { 0x000076, 0x000030 },
        { 0x000077, 0x000031 },
        { 0x000078, 0x000032 },
        { 0x000079, 0x000033 },
        { 0x00007a, 0x000034 },
        { 0x000024, 0x000035 },
        { 0x000030, 0x000036 },
        { 0x000031, 0x000037 },
        { 0x000032, 0x000038 },
        { 0x000033, 0x000039 },
        { 0x000034, 0x00003a },
        { 0x000035, 0x00003b },
        { 0x000036, 0x00003c },
        { 0x000037, 0x00003d },
        { 0x000038, 0x00003e },
        { 0x000039, 0x00003f },
        { 0x000026, 0x000040 },
        { 0x000021, 0x000041 },
        { 0x00003f, 0x000042 },
        { 0x000028, 0x000043 },
        { 0x000029, 0x000044 },
        { 0x00005b, 0x000045 },
        { 0x00005d, 0x000046 },
        { 0x00007b, 0x000047 },
        { 0x00007d, 0x000048 },
        { 0x000040, 0x000049 },
        { 0x000023, 0x00004a },
        { 0x00002f, 0x00004b },
        { 0x00007c, 0x00004c },
        { 0x00005c, 0x00004d },
        { 0x00002d, 0x00004e },
        { 0x000027, 0x00004f },
        { 0x000022, 0x000050 },
        { 0x00002c, 0x000051 },
        { 0x00002e, 0x000052 },
        { 0x00003a, 0x000053 },
        { 0x00003b, 0x000054 },
        { 0x00003c, 0x000055 },
        { 0x00003e, 0x000056 },
        { 0x00003d, 0x000057 },
        { 0x00002b, 0x000058 },
        { 0x00007e, 0x000059 },
        { 0x00005f, 0x00005a },
        { 0x00005e, 0x00005b },
        { 0x00002a, 0x00005c },
        { 0x000025, 0x00005d },
        { 0x000060, 0x00005e }
    }};

    static constexpr hextree<hextree<0, uint16_t>::size(glyph_table), uint16_t> glyph_tree{glyph_table};

    static constexpr std::array<char_info, 95> char_table{{
      //     x|    y|    w|    h| xadv| xoff| yoff|
        {   13,   14,    1,    1,    3,    0,   18 },
        {   30,   13,   11,   12,   13,    1,    6 },
        {   22,   74,   10,   12,   12,    1,    6 },
        {    0,   61,   11,   12,   12,    1,    6 },
        {   27,   57,   10,   12,   12,    1,    6 },
        {   54,    0,    9,   12,   10,    1,    6 },
        {   53,   37,    9,   12,   10,    1,    6 },
        {    0,   73,   11,   12,   13,    1,    6 },
        {   33,   38,   10,   12,   12,    1,    6 },
        {   66,   83,    3,   12,    5,    1,    6 },
        {   60,   24,    9,   12,   10,    0,    6 },
        {    0,   85,   11,   12,   12,    1,    6 },
        {   70,   12,    8,   12,   10,    1,    6 },
        {   14,   12,   13,   12,   15,    1,    6 },
        {   41,   13,   10,   12,   12,    1,    6 },
        {    0,   97,   11,   12,   13,    1,    6 },
        {   44,    0,   10,   12,   12,    1,    6 },
        {   13,   24,   11,   13,   13,    1,    6 },
        {   41,   25,   10,   12,   12,    1,    6 },
        {   22,   86,   10,   12,   12,    1,    6 },
        {   22,   98,   10,   12,   10,    0,    6 },
        {   30,  110,   10,   12,   12,    1,    6 },
        {    0,  109,   11,   12,   13,    1,    6 },
        {   14,    0,   16,   12,   18,    1,    6 },
        {   16,   57,   11,   12,   13,    1,    6 },
        {   32,   69,   10,   12,   12,    1,    6 },
        {   37,   50,   10,   12,   12,    1,    6 },
        {   21,  111,    9,   10,   11,    1,    8 },
        {   51,   24,    9,   13,   11,    1,    5 },
        {   60,   61,    9,   10,   10,    1,    8 },
        {   32,   81,    9,   13,   11,    1,    5 },
        {   65,   48,    9,   10,   11,    1,    8 },
        {   50,   91,    7,   13,    9,    1,    5 },
        {   32,   94,    9,   13,   11,    1,    8 },
        {   40,  107,    9,   13,   11,    1,    5 },
        {   10,   14,    3,   13,    5,    1,    5 },
        {    8,   40,    5,   17,    5,   -1,    4 },
        {   41,   81,    9,   13,   11,    1,    5 },
        {   10,   27,    3,   13,    5,    1,    5 },
        {   27,   28,   14,   10,   16,    1,    8 },
        {   71,   35,    9,   10,   11,    1,    8 },
        {   57,   89,    9,   10,   11,    1,    8 },
        {   41,   94,    9,   13,   11,    1,    8 },
        {   42,   62,    9,   13,   11,    1,    8 },
        {   62,  115,    6,   10,    7,    1,    8 },
        {   69,   58,    8,   10,   10,    1,    8 },
        {   63,   71,    7,   12,    9,    1,    6 },
        {   78,   12,    9,   10,   11,    1,    8 },
        {   80,    0,    9,   10,   11,    1,    8 },
        {   13,   37,   14,   10,   16,    1,    8 },
        {   78,   22,    9,   10,   11,    1,    8 },
        {   47,   49,    9,   13,   11,    1,    8 },
        {   74,   45,    8,   10,   10,    1,    8 },
        {    0,   14,   10,   15,   12,    1,    4 },
        {   61,   12,    9,   12,   11,    1,    6 },
        {   80,   32,    6,   12,   11,    1,    6 },
        {   63,    0,    9,   12,   11,    1,    6 },
        {   51,   62,    9,   12,   11,    0,    6 },
        {   11,   75,   11,   12,   11,    0,    6 },
        {   43,   37,   10,   12,   11,    1,    6 },
        {   51,   12,   10,   12,   11,    1,    6 },
        {   69,   24,    9,   11,   11,    1,    6 },
        {   56,   49,    9,   12,   11,    1,    6 },
        {   62,   36,    9,   12,   11,    0,    6 },
        {   11,   87,   11,   12,   13,    1,    6 },
        {   67,   95,    3,   12,    5,    1,    6 },
        {   72,    0,    8,   12,    9,    0,    6 },
        {   11,   59,    5,   16,    7,    1,    5 },
        {   62,   99,    5,   16,    7,    1,    5 },
        {   56,  104,    6,   15,    8,    1,    5 },
        {   57,   74,    6,   15,    7,    0,    5 },
        {    0,   29,    8,   16,    8,    0,    5 },
        {    0,   45,    7,   16,    9,    1,    5 },
        {    0,    0,   14,   14,   16,    1,    6 },
        {   11,   99,   11,   12,   13,    1,    6 },
        {   49,  107,    7,   16,    8,    1,    5 },
        {   27,   12,    3,   16,    7,    2,    5 },
        {   50,   75,    7,   16,    8,    1,    5 },
        {   10,   57,    6,    2,    8,    1,   12 },
        {   23,   69,    3,    5,    5,    0,    6 },
        {   16,   69,    7,    5,    9,    1,    6 },
        {   26,  121,    4,    6,    4,    0,   15 },
        {    7,   57,    3,    4,    5,    1,   14 },
        {   69,   83,    3,   10,    5,    1,    8 },
        {   24,   24,    3,   13,    5,    0,    8 },
        {   13,   47,   10,   10,   11,    1,    8 },
        {   23,   47,   10,   10,   12,    1,    8 },
        {    0,  121,   10,    7,   12,    1,   10 },
        {   11,  111,   10,   10,   12,    1,    8 },
        {   10,  121,    9,    5,   11,    1,    9 },
        {   30,   25,   11,    2,    7,   -2,   20 },
        {   19,  121,    7,    5,    9,    1,    6 },
        {   27,   38,    6,    6,    8,    0,    6 },
        {   30,    0,   14,   13,   16,    1,    6 },
        {   27,   44,    3,    3,    9,    3,    4 }
    }};

    static constexpr bool mono = true;
    static constexpr size_t glyph_bitmap_width = 89;
    static constexpr size_t glyph_bitmap_height = 128;
    static constexpr size_t glyph_bitmap_stride = 12;

    static constexpr std::array<uint8_t, 1536> glyph_bitmap{{
        0x0f,0xc3,0x86,0x1d,0xc0,0x47,0xf3,0xfc,0x7c,0x3c,0xe3,0x80,0x38,0x73,0x8f,0x1f,
        0xe0,0xcf,0xfb,0xfc,0xfe,0x7e,0xe3,0x80,0x60,0x1b,0xcf,0x3f,0x61,0x8e,0x3f,0x81,
        0xce,0x67,0xf3,0x80,0x60,0x1f,0xcf,0x3f,0x63,0x8e,0x1f,0x81,0x8f,0x07,0xf7,0x00,
        0xcf,0xed,0xcf,0x3b,0xe3,0x0e,0x1f,0x80,0x0f,0x0f,0x77,0x00,0xdc,0xed,0xdf,0xb9,
        0xc6,0x0e,0x3f,0xfc,0x1e,0x1f,0x77,0x00,0xdc,0xed,0xdf,0xb8,0x0d,0xef,0xfb,0xfc,
        0x3e,0x1e,0x76,0x00,0xdc,0xec,0xf9,0xf0,0x1f,0x3f,0xf3,0x80,0x7c,0x38,0x3e,0x00,
        0xdc,0xe8,0xf9,0xf0,0x1b,0x3e,0x03,0x80,0xf8,0x18,0x3e,0x00,0xef,0x78,0xf9,0xf0,
        0x33,0x3e,0x03,0x81,0xf0,0x00,0x1c,0x00,0x60,0x00,0xf8,0xf0,0x63,0xfe,0x03,0xfd,
        0xff,0x38,0x00,0x00,0x78,0x00,0x70,0xe0,0xe1,0xee,0x03,0xfd,0xff,0x38,0x00,0x00,
        0x3f,0xc1,0xc1,0xdc,0xc0,0x00,0x03,0xe1,0xf3,0x83,0x8e,0x00,0x0f,0xc3,0xc1,0xfc,
        0x38,0x70,0xef,0xf3,0xfb,0x83,0x8e,0x00,0x0c,0x3b,0xe3,0xfc,0x7c,0x78,0xee,0x73,
        0xbb,0x83,0x8e,0x00,0x1e,0x3b,0xe3,0xfc,0x6c,0x78,0xfc,0x07,0x1f,0x83,0x8e,0x00,
        0x7f,0x83,0xf7,0xfc,0xee,0x7c,0xfd,0xe7,0x1f,0x83,0x8e,0x00,0xff,0xfb,0xf7,0xfc,
        0xee,0x7e,0xff,0xf7,0x1f,0x83,0x8e,0x00,0xe3,0xfb,0xb6,0xfc,0xee,0x7e,0xfe,0x7f,
        0x1f,0x83,0x8e,0x00,0xe0,0x3b,0xbe,0xfd,0xc7,0x77,0xfc,0x3f,0x1f,0x83,0x8e,0x00,
        0xfe,0x3b,0xbe,0xfd,0xff,0x77,0xfc,0x3f,0x1f,0x83,0xfe,0x00,0x7f,0xbb,0x9c,0xfd,
        0xff,0x73,0xee,0x7b,0xbb,0x81,0xee,0x00,0x1f,0xfb,0x9c,0xff,0x87,0xf1,0xef,0xf3,
        0xfb,0xff,0x8e,0x00,0x01,0xfb,0x80,0xff,0x83,0xf1,0xe3,0xe1,0xf3,0xff,0x8e,0x00,
        0xe1,0xf8,0xf8,0x5f,0x83,0xf0,0xfc,0x00,0x3f,0xff,0xde,0x00,0xff,0xfb,0xfe,0xff,
        0xff,0xbf,0x9c,0x00,0x3f,0xfd,0xfc,0x00,0x7f,0xbb,0x8e,0xff,0xff,0xff,0xdc,0x00,
        0x38,0x3c,0xf8,0x00,0x1e,0x3f,0x07,0x5c,0x00,0x71,0xfd,0xc0,0x38,0x38,0xf8,0x00,
        0x0c,0x3f,0x07,0x1d,0xe7,0x70,0xff,0xe0,0x38,0x79,0xfc,0x00,0x1e,0x3f,0x07,0x1f,
        0xff,0xf0,0xfe,0xf0,0x38,0x73,0xde,0x00,0x3e,0x3f,0x07,0x1c,0x73,0xf1,0xfc,0x70,
        0x38,0xf3,0x8e,0x00,0x3c,0x3f,0x07,0xfc,0x73,0xff,0xdc,0x70,0x38,0xe3,0x8e,0x00,
        0x38,0x3f,0x3f,0xfc,0x73,0xff,0x9c,0x70,0x39,0xe0,0x38,0x00,0x38,0x3b,0xbf,0xfc,
        0x73,0xf3,0xdc,0x77,0x39,0xc0,0x7c,0x00,0x38,0x3b,0xfe,0xfc,0x73,0xf3,0xde,0xf7,
        0xf1,0xc0,0xfc,0x00,0x78,0x38,0xfe,0xdc,0x73,0xf1,0xff,0xe3,0xe1,0xde,0xdc,0x00,
        0x70,0x38,0x06,0xdc,0x73,0xf0,0xdd,0xc0,0xf1,0xff,0x1c,0x00,0x70,0x3f,0x18,0xfc,
        0x73,0x9f,0xf7,0xf9,0xfd,0xc7,0x1c,0x00,0x38,0x3f,0x3c,0xe4,0x70,0xff,0xf7,0xfb,
        0x9d,0xc7,0x1c,0x00,0x38,0x3f,0x3c,0xfd,0xf0,0xfc,0x07,0x03,0x8f,0xc7,0x1c,0x00,
        0x38,0x3f,0x3d,0xef,0x70,0xfc,0x07,0x03,0x8f,0xc7,0x1c,0x00,0x38,0x3b,0xbd,0xcf,
        0x70,0xfd,0xe7,0x03,0x9f,0xc7,0x1c,0x00,0x3c,0x03,0xef,0xdd,0xf0,0xff,0xf7,0xf9,
        0xff,0xc7,0x1c,0x00,0x3e,0x03,0xe7,0xc4,0x7f,0xe8,0x77,0xf8,0xef,0xc7,0x1c,0x00,
        0x1e,0x3b,0xe7,0x98,0x7f,0xe0,0x7f,0x00,0x0f,0xc7,0x00,0x00,0xf0,0x39,0xe7,0x9c,
        0x70,0xfc,0x77,0x03,0x1c,0x3f,0xc0,0x00,0xf8,0x39,0xc3,0x0c,0x70,0xfc,0x77,0x03,
        0xfc,0x3f,0xc0,0x00,0x78,0x38,0x1d,0xc0,0x70,0xef,0xf7,0x01,0xf0,0x03,0xc0,0x00,
        0x38,0x38,0x7d,0xf8,0x70,0xe7,0xc7,0x00,0x1f,0x07,0x80,0x00,0x38,0x3b,0xfd,0xfe,
        0x70,0xe1,0xc7,0x3e,0x3f,0x8f,0x80,0x00,0x38,0x3f,0xf8,0x7f,0x07,0xfd,0xc7,0x7f,
        0x71,0xdf,0x00,0x00,0x3c,0x3f,0x80,0x0f,0x07,0xfd,0xe7,0xf3,0xf1,0xde,0x00,0x00,
        0x1e,0x3f,0xc0,0x0f,0x00,0x3d,0xee,0xe3,0xff,0xfc,0x00,0x00,0x1e,0x3f,0xf8,0xff,
        0x00,0x78,0xee,0x73,0xff,0xff,0xc0,0x00,0x38,0x39,0xfd,0xfe,0x00,0xf8,0xee,0x3f,
        0x70,0x3f,0xc0,0x00,0x38,0xf8,0x7d,0xf8,0x00,0xf0,0xee,0x7f,0x70,0x80,0x00,0x00,
        0x38,0xf0,0x1d,0xc0,0x01,0xe0,0x7c,0xe3,0xbf,0xc0,0x00,0x00,0x38,0xbf,0xe0,0xff,
        0xc3,0xc0,0x7c,0xe3,0x9f,0x80,0x00,0x00,0x79,0xff,0xf1,0xff,0xf3,0xc0,0x7c,0xe3,
        0x81,0xf0,0x00,0x00,0xf9,0xc7,0xf1,0xfc,0x77,0x80,0x78,0x7f,0x83,0xf8,0x00,0x00,
        0xf0,0x87,0x7b,0xdc,0x3f,0xff,0xf8,0x3e,0x07,0x30,0x00,0x00,0x1f,0x0f,0x3f,0x9c,
        0x3b,0xff,0xe0,0x03,0xe7,0x80,0x00,0x00,0x7f,0xce,0x1f,0x1c,0x38,0x0e,0xe7,0xc7,
        0xf7,0xf0,0x00,0x00,0x71,0xde,0x1f,0x1c,0x38,0x1f,0xff,0xef,0x33,0xf8,0x00,0x00,
        0xe0,0xdc,0x3f,0x9c,0x38,0x3d,0xfc,0x7e,0x00,0x78,0x00,0x00,0xe0,0x1c,0x7b,0xdc,
        0x38,0x38,0xf8,0x7e,0x06,0x38,0x00,0x00,0xe0,0x1c,0xf1,0xfc,0x70,0x38,0xe0,0x7e,
        0x07,0xf0,0x00,0x00,0xe0,0x1c,0xf1,0xff,0xf0,0x38,0xe3,0xee,0x03,0xe0,0x00,0x00,
        0xe0,0x1c,0xe0,0xff,0xc0,0x38,0xe3,0xee,0x30,0x00,0x00,0x00,0xe0,0xdc,0xef,0xc0,
        0xe0,0xfd,0xe0,0x77,0xf0,0x00,0x00,0x00,0x71,0xde,0xef,0xc0,0xf1,0xdf,0xf8,0x73,
        0xe0,0x00,0x00,0x00,0x7f,0xce,0xef,0xc0,0xf1,0xce,0xfc,0x70,0x70,0x00,0x00,0x00,
        0x1f,0x0f,0xef,0xc0,0x7b,0x80,0xff,0xf0,0x70,0x00,0x00,0x00,0x1f,0x87,0xef,0xc0,
        0x3b,0x80,0xe7,0xc1,0xfc,0x00,0x00,0x00,0x7f,0xc7,0x03,0xfc,0x3f,0x00,0xe0,0x3f,
        0xfc,0x00,0x00,0x00,0x71,0xe0,0x63,0xfe,0x1f,0x00,0x38,0x3e,0x70,0x00,0x00,0x00,
        0xe0,0x41,0xf3,0x8e,0x0e,0x00,0x38,0x0e,0x70,0x00,0x00,0x00,0xe0,0x03,0xf3,0x8e,
        0x0e,0x00,0x38,0x0e,0x70,0x00,0x00,0x00,0xe3,0xe7,0xf3,0x8e,0x0e,0x00,0x3c,0x0e,
        0x70,0x00,0x00,0x00,0xe3,0xe7,0x73,0xfc,0x0e,0x00,0x1c,0x0e,0x70,0x00,0x00,0x00,
        0xe0,0xef,0x73,0xfe,0x0e,0x00,0x1c,0x0e,0x70,0x00,0x00,0x00,0xe0,0xee,0x73,0x87,
        0x03,0xf0,0x1c,0x0e,0x7c,0x00,0x00,0x00,0x71,0xfc,0x73,0x87,0x03,0xf0,0x0e,0x0e,
        0x3c,0x00,0x00,0x00,0x7f,0xdf,0xff,0x87,0x03,0xf0,0x0e,0x0e,0x3a,0x00,0x00,0x00,
        0x1f,0x1f,0xff,0xfe,0x3b,0xf1,0xce,0x0e,0x3f,0x00,0x00,0x00,0xe1,0xc0,0x73,0xfc,
        0x7f,0xf3,0xce,0x0e,0x3f,0x00,0x00,0x00,0xe3,0xe0,0x30,0xfc,0xf7,0xf7,0xc7,0x0e,
        0x3a,0x00,0x00,0x00,0xe7,0xc3,0xe1,0xfe,0xe3,0xff,0x87,0x3e,0x38,0x00,0x00,0x00,
        0xef,0x8f,0xf3,0x8f,0xe3,0xff,0x07,0x3e,0x38,0x00,0x00,0x00,0xff,0x0e,0x73,0x80,
        0xe3,0xff,0x07,0x1f,0x3a,0x00,0x00,0x00,0xfe,0x0e,0x73,0xf8,0xe3,0xf7,0x83,0x3f,
        0xbf,0x00,0x00,0x00,0xff,0x07,0xff,0xfe,0xf7,0xf3,0xc7,0xf1,0xff,0x00,0x00,0x00,
        0xff,0x87,0x9d,0xff,0x7f,0xf3,0xcf,0xf1,0xfa,0x00,0x00,0x00,0xe7,0x8f,0xdc,0x7f,
        0x3b,0xf1,0xce,0x71,0xf8,0x00,0x00,0x00,0xe3,0xdc,0xfd,0x07,0x3b,0xf7,0x3f,0xf1,
        0xf8,0x00,0x00,0x00,0xe3,0xdc,0x7f,0xc7,0x7f,0xff,0xbf,0xf1,0xdc,0x00,0x00,0x00,
        0xe1,0xdc,0x7b,0xfe,0xf7,0xfb,0xce,0x71,0xdc,0x00,0x00,0x00,0x1f,0x0f,0xfc,0xfc,
        0xe3,0xf1,0xce,0x3f,0x9c,0x00,0x00,0x00,0x7f,0xc7,0xdf,0xff,0xe3,0xf1,0xce,0x1f,
        0x1c,0x00,0x00,0x00,0x71,0xc3,0xb3,0xff,0xe3,0xf1,0xce,0x01,0x9c,0x00,0x00,0x00,
        0xe0,0xe3,0xb0,0x38,0xe3,0xf1,0xce,0x01,0xdc,0x00,0x00,0x00,0xe0,0xef,0xfc,0x38,
        0xf7,0xfb,0xce,0x01,0xdc,0x00,0x00,0x00,0xe0,0xef,0xfc,0x38,0x7f,0xff,0x8e,0x01,
        0xdc,0x00,0x00,0x00,0xe0,0xe7,0x30,0x38,0x3b,0xf7,0x0e,0x00,0xfc,0x00,0x00,0x00,
        0xe0,0xe6,0x70,0x38,0x43,0xf0,0x00,0x7c,0xe0,0x00,0x00,0x00,0xe0,0xe6,0x60,0x38,
        0xff,0x70,0x00,0xfc,0xfc,0x00,0x00,0x00,0x71,0xdf,0xf8,0x38,0x7e,0x70,0x00,0xe0,
        0xfc,0x00,0x00,0x00,0x7f,0xdf,0xf8,0x38,0x00,0xe0,0x06,0xe0,0xe0,0x00,0x00,0x00,
        0x1f,0x06,0xe0,0x38,0x00,0xe0,0x0e,0xe0,0xe0,0x00,0x00,0x00,0xe0,0xee,0xe0,0x38,
        0x00,0xe0,0x0e,0xe0,0xe0,0x00,0x00,0x00,0xe0,0xe6,0xc0,0x03,0x87,0xef,0x0e,0xe1,
        0xe0,0x00,0x00,0x00,0xf1,0xe3,0x81,0xf3,0x87,0xff,0x8e,0xe1,0xc0,0x00,0x00,0x00,
        0xf1,0xe3,0x83,0xfb,0x87,0xe3,0x9c,0xe1,0xc0,0x00,0x00,0x00,0x71,0xc3,0x83,0x1f,
        0x87,0xe3,0x9c,0xe1,0xc0,0x00,0x00,0x00,0x79,0xc3,0x80,0x1f,0x87,0xe3,0x9c,0xe1,
        0x80,0x00,0x00,0x00,0x7b,0xdf,0xf9,0xff,0x87,0xe3,0x9c,0xe3,0xf0,0x00,0x00,0x00,
        0x3b,0x9f,0xff,0x1f,0x87,0xe3,0xb8,0xe3,0xf0,0x00,0x00,0x00,0x3b,0x83,0x87,0x1f,
        0x87,0xe3,0xb8,0xff,0xc0,0x00,0x00,0x00,0x3f,0x83,0x87,0x1f,0x87,0xe3,0xb8,0x7f,
        0x80,0x00,0x00,0x00,0x1f,0x03,0x87,0xff,0xcf,0xe3,0xf8,0x03,0x80,0x00,0x00,0x00,
        0x0e,0x03,0x83,0xdd,0xfe,0x00,0x70,0x03,0x80,0x00,0x00,0x00,0xff,0xc0,0x67,0x18,
        0xfc,0x00,0x70,0x03,0x80,0x00,0x00,0x00,0xff,0xdc,0x6f,0x9c,0x00,0x00,0x70,0x03,
        0x80,0x00,0x00,0x00,0x00,0x3e,0x6d,0x9c,0x00,0x00,0x00,0x03,0x80,0x00,0x00,0x00,
        0x00,0x33,0xd9,0xd8,0x00,0x00,0x00,0x03,0x80,0x00,0x00,0x00,0x00,0x31,0xc0,0x38,
        0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xc0,0x00,0x18,0x00,0x00,0x00,0x00,
        0x00,0x00,0x00,0x00,0xff,0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
        }};

};

}
