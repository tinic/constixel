namespace constixel {

struct sf_compact_display_heavy_12_mono {

    static constexpr std::array<std::pair<uint16_t, uint16_t>, 95> glyph_table{{
        { 0x000020, 0x000000 },
        { 0x000041, 0x000001 },
        { 0x000042, 0x000002 },
        { 0x000043, 0x000003 },
        { 0x000044, 0x000004 },
        { 0x000045, 0x000005 },
        { 0x000046, 0x000006 },
        { 0x000047, 0x000007 },
        { 0x000048, 0x000008 },
        { 0x000049, 0x000009 },
        { 0x00004a, 0x00000a },
        { 0x00004b, 0x00000b },
        { 0x00004c, 0x00000c },
        { 0x00004d, 0x00000d },
        { 0x00004e, 0x00000e },
        { 0x00004f, 0x00000f },
        { 0x000050, 0x000010 },
        { 0x000051, 0x000011 },
        { 0x000052, 0x000012 },
        { 0x000053, 0x000013 },
        { 0x000054, 0x000014 },
        { 0x000055, 0x000015 },
        { 0x000056, 0x000016 },
        { 0x000057, 0x000017 },
        { 0x000058, 0x000018 },
        { 0x000059, 0x000019 },
        { 0x00005a, 0x00001a },
        { 0x000061, 0x00001b },
        { 0x000062, 0x00001c },
        { 0x000063, 0x00001d },
        { 0x000064, 0x00001e },
        { 0x000065, 0x00001f },
        { 0x000066, 0x000020 },
        { 0x000067, 0x000021 },
        { 0x000068, 0x000022 },
        { 0x000069, 0x000023 },
        { 0x00006a, 0x000024 },
        { 0x00006b, 0x000025 },
        { 0x00006c, 0x000026 },
        { 0x00006d, 0x000027 },
        { 0x00006e, 0x000028 },
        { 0x00006f, 0x000029 },
        { 0x000070, 0x00002a },
        { 0x000071, 0x00002b },
        { 0x000072, 0x00002c },
        { 0x000073, 0x00002d },
        { 0x000074, 0x00002e },
        { 0x000075, 0x00002f },
        { 0x000076, 0x000030 },
        { 0x000077, 0x000031 },
        { 0x000078, 0x000032 },
        { 0x000079, 0x000033 },
        { 0x00007a, 0x000034 },
        { 0x000024, 0x000035 },
        { 0x000030, 0x000036 },
        { 0x000031, 0x000037 },
        { 0x000032, 0x000038 },
        { 0x000033, 0x000039 },
        { 0x000034, 0x00003a },
        { 0x000035, 0x00003b },
        { 0x000036, 0x00003c },
        { 0x000037, 0x00003d },
        { 0x000038, 0x00003e },
        { 0x000039, 0x00003f },
        { 0x000026, 0x000040 },
        { 0x000021, 0x000041 },
        { 0x00003f, 0x000042 },
        { 0x000028, 0x000043 },
        { 0x000029, 0x000044 },
        { 0x00005b, 0x000045 },
        { 0x00005d, 0x000046 },
        { 0x00007b, 0x000047 },
        { 0x00007d, 0x000048 },
        { 0x000040, 0x000049 },
        { 0x000023, 0x00004a },
        { 0x00002f, 0x00004b },
        { 0x00007c, 0x00004c },
        { 0x00005c, 0x00004d },
        { 0x00002d, 0x00004e },
        { 0x000027, 0x00004f },
        { 0x000022, 0x000050 },
        { 0x00002c, 0x000051 },
        { 0x00002e, 0x000052 },
        { 0x00003a, 0x000053 },
        { 0x00003b, 0x000054 },
        { 0x00003c, 0x000055 },
        { 0x00003e, 0x000056 },
        { 0x00003d, 0x000057 },
        { 0x00002b, 0x000058 },
        { 0x00007e, 0x000059 },
        { 0x00005f, 0x00005a },
        { 0x00005e, 0x00005b },
        { 0x00002a, 0x00005c },
        { 0x000025, 0x00005d },
        { 0x000060, 0x00005e },
    }};

    static constexpr hextree<hextree<0, uint16_t>::size(glyph_table), uint16_t> glyph_tree{glyph_table};

    static constexpr std::array<char_info, 95> char_table{{
      // | unicode|    x|    y|    w|    h| xadv| xoff| yoff|
        { 0x000020,   15,   46,    1,    1,    2,    0,   12 },
        { 0x000041,    0,   28,    8,    9,    8,    0,    3 },
        { 0x000042,   15,   37,    7,    9,    9,    1,    3 },
        { 0x000043,    8,   54,    7,    9,    9,    1,    3 },
        { 0x000044,   15,   54,    7,    9,    9,    1,    3 },
        { 0x000045,   28,    0,    6,    9,    7,    1,    3 },
        { 0x000046,   23,   27,    6,    9,    7,    1,    3 },
        { 0x000047,   22,   54,    7,    9,    9,    1,    3 },
        { 0x000048,   16,   18,    7,    9,    9,    1,    3 },
        { 0x000049,   67,   52,    2,    9,    4,    1,    3 },
        { 0x00004a,   32,   45,    6,    9,    8,    1,    3 },
        { 0x00004b,   17,    9,    7,    9,    8,    1,    3 },
        { 0x00004c,   30,   18,    6,    9,    7,    1,    3 },
        { 0x00004d,    0,   37,    8,    9,   10,    1,    3 },
        { 0x00004e,   16,   27,    7,    9,    9,    1,    3 },
        { 0x00004f,   22,   36,    7,    9,    9,    1,    3 },
        { 0x000050,   31,    9,    6,    9,    8,    1,    3 },
        { 0x000051,    9,   18,    7,   10,    9,    1,    3 },
        { 0x000052,   25,   45,    7,    9,    9,    1,    3 },
        { 0x000053,   29,   54,    7,    9,    9,    1,    3 },
        { 0x000054,   34,    0,    6,    9,    8,    1,    3 },
        { 0x000055,   23,   18,    7,    9,    9,    1,    3 },
        { 0x000056,    0,   46,    8,    9,    8,   -1,    3 },
        { 0x000057,    0,    0,   11,    9,   11,   -1,    3 },
        { 0x000058,    0,   55,    8,    9,    7,   -1,    3 },
        { 0x000059,    8,   28,    8,    9,    6,   -1,    3 },
        { 0x00005a,   36,   54,    6,    9,    8,    1,    3 },
        { 0x000061,   36,   38,    6,    7,    8,    1,    5 },
        { 0x000062,   38,   45,    6,    9,    8,    1,    3 },
        { 0x000063,   42,   38,    6,    7,    8,    1,    5 },
        { 0x000064,   36,   18,    6,    9,    8,    1,    3 },
        { 0x000065,   48,   38,    6,    7,    8,    1,    5 },
        { 0x000066,   60,   34,    4,    9,    6,    1,    3 },
        { 0x000067,   37,    9,    6,    9,    8,    1,    5 },
        { 0x000068,   40,    0,    6,    9,    8,    1,    3 },
        { 0x000069,   70,   12,    2,   10,    4,    1,    2 },
        { 0x00006a,   65,   22,    3,   12,    4,    0,    2 },
        { 0x00006b,   42,   54,    6,    9,    7,    1,    3 },
        { 0x00006c,   68,   41,    2,    9,    4,    1,    3 },
        { 0x00006d,   11,    0,   10,    7,   12,    1,    5 },
        { 0x00006e,   54,   38,    6,    7,    8,    1,    5 },
        { 0x00006f,   54,   17,    6,    7,    8,    1,    5 },
        { 0x000070,   44,   45,    6,    9,    8,    1,    5 },
        { 0x000071,   42,   18,    6,    9,    8,    1,    5 },
        { 0x000072,   64,    0,    5,    7,    6,    1,    5 },
        { 0x000073,   55,    8,    6,    7,    7,    1,    5 },
        { 0x000074,   62,   43,    4,    9,    6,    1,    3 },
        { 0x000075,   58,    0,    6,    7,    8,    1,    5 },
        { 0x000076,   21,    0,    7,    7,    7,   -1,    5 },
        { 0x000077,    8,   47,   10,    7,   10,    0,    5 },
        { 0x000078,   29,   38,    7,    7,    7,    0,    5 },
        { 0x000079,   43,    9,    6,    9,    7,    0,    5 },
        { 0x00007a,   64,   34,    5,    7,    7,    1,    5 },
        { 0x000024,    8,   37,    7,   10,    8,    1,    3 },
        { 0x000030,   48,   54,    6,    8,    8,    1,    4 },
        { 0x000031,   66,   14,    4,    8,    8,    1,    4 },
        { 0x000032,   50,   45,    6,    8,    8,    1,    4 },
        { 0x000033,   48,   18,    6,    8,    8,    0,    4 },
        { 0x000034,   18,   46,    7,    8,    8,    0,    4 },
        { 0x000035,   49,    9,    6,    8,    8,    0,    4 },
        { 0x000036,   52,    0,    6,    8,    8,    1,    4 },
        { 0x000037,   54,   53,    6,    8,    8,    1,    4 },
        { 0x000038,   49,   26,    6,    8,    8,    0,    4 },
        { 0x000039,   56,   45,    6,    8,    8,    1,    4 },
        { 0x000026,    9,    9,    8,    9,    9,    1,    3 },
        { 0x000021,   69,   50,    2,    9,    4,    1,    3 },
        { 0x00003f,   46,    0,    6,    9,    7,    0,    3 },
        { 0x000028,   68,   22,    3,   11,    5,    1,    3 },
        { 0x000029,   64,   52,    3,   11,    5,    0,    3 },
        { 0x00005b,   60,   53,    4,   11,    6,    1,    3 },
        { 0x00005d,   55,   24,    4,   11,    5,    0,    3 },
        { 0x00007b,   29,   27,    5,   11,    5,    0,    3 },
        { 0x00007d,   34,   27,    5,   11,    5,    0,    3 },
        { 0x000040,    0,    9,    9,   10,   11,    1,    3 },
        { 0x000023,   24,    9,    7,    9,    8,    0,    3 },
        { 0x00002f,   39,   27,    5,   11,    5,   -1,    3 },
        { 0x00007c,   66,   41,    2,   11,    4,    1,    3 },
        { 0x00005c,   44,   27,    5,   11,    5,   -1,    3 },
        { 0x00002d,   16,    7,    4,    2,    6,    1,    8 },
        { 0x000027,   59,   31,    3,    3,    3,    0,    3 },
        { 0x000022,   55,   35,    5,    3,    6,    0,    3 },
        { 0x00002c,   62,   31,    3,    3,    3,    0,   11 },
        { 0x00002e,   23,    7,    2,    2,    4,    1,   10 },
        { 0x00003a,   69,   33,    2,    7,    4,    1,    5 },
        { 0x00003b,   70,   40,    2,    9,    4,    0,    5 },
        { 0x00003c,   59,   24,    6,    7,    8,    1,    4 },
        { 0x00003e,   60,   15,    6,    7,    8,    1,    4 },
        { 0x00003d,   67,    7,    6,    5,    8,    1,    6 },
        { 0x00002b,   61,    7,    6,    7,    8,    1,    5 },
        { 0x00007e,   54,   61,    6,    3,    7,   -1,    6 },
        { 0x00005f,   11,    7,    5,    2,    5,    0,   12 },
        { 0x00005e,   49,   34,    6,    4,    6,    0,    3 },
        { 0x00002a,   69,    0,    5,    5,    5,    0,    3 },
        { 0x000025,    0,   19,    9,    9,   11,    1,    3 },
        { 0x000060,   20,    7,    3,    2,    6,    1,    2 },
    }};

    static constexpr bool mono = true;
    static constexpr size_t glyph_bitmap_width = 74;
    static constexpr size_t glyph_bitmap_height = 64;
    static constexpr size_t glyph_bitmap_stride = 10;

    static constexpr std::array<uint8_t, 640> glyph_bitmap{{
        0xcc,0xfb,0x76,0x6f,0xff,0xc0,0xe7,0xb3,0xf9,0x00,0xee,0xdf,0xff,0x6f,0xff,0xc1,
        0xf4,0xf3,0xfb,0xc0,0x6e,0xd9,0x9b,0x6c,0x0c,0xf9,0xbc,0x33,0xc1,0x80,0x6e,0xd9,
        0x9b,0x6c,0x0c,0xfc,0x3f,0xb3,0xc3,0xc0,0x6a,0xd9,0x9b,0xcf,0xcc,0xcc,0xec,0xf3,
        0xc1,0x00,0x7a,0xd9,0x9b,0xcf,0xcc,0xcc,0xcc,0xff,0xc0,0x00,0x7b,0x99,0x99,0xcc,
        0x0c,0xcc,0x04,0xdb,0xc0,0x00,0x3b,0x9f,0xf5,0x8f,0xcc,0xcc,0xc7,0x81,0x9f,0x80,
        0x31,0x9f,0xf7,0x8f,0xcc,0xcc,0xc0,0xf1,0x9f,0x80,0x3e,0x1c,0x67,0x37,0xf3,0x79,
        0xff,0xf7,0xe0,0x00,0x61,0x3e,0x6e,0x35,0xff,0xf9,0xe1,0xf7,0xff,0x80,0xe1,0xb6,
        0x6c,0x7f,0x9e,0x7b,0xe0,0xf1,0x9f,0x80,0xde,0xb4,0x7c,0x7f,0x9e,0x6f,0x7d,0xb1,
        0x80,0x00,0xf6,0xbb,0x7c,0x2d,0x9e,0x6f,0x07,0xf1,0x83,0x00,0xf6,0xef,0x7c,0xff,
        0xff,0xef,0x06,0xf0,0x1c,0x00,0xf6,0xe7,0x6e,0xff,0xf7,0x6e,0x66,0x0c,0x3f,0x00,
        0xdb,0x7f,0x66,0x69,0x87,0xfe,0x3c,0x0f,0x2f,0x00,0x60,0x3b,0xe7,0x49,0x83,0xdc,
        0x01,0xe7,0x8f,0x00,0x3c,0x1c,0xc7,0x8f,0x00,0xdf,0x7b,0xf1,0xcf,0x00,0x61,0x3e,
        0xc7,0x8f,0x00,0xff,0xcf,0x37,0x8f,0x00,0xf2,0x63,0xc7,0x8f,0x06,0xf3,0x0f,0x3f,
        0x0f,0x00,0xf4,0x63,0xc7,0x8f,0x0f,0xf3,0x1b,0x3c,0x0f,0x00,0xf4,0x63,0xff,0x8f,
        0x0c,0xf3,0x0f,0xf0,0x06,0x00,0x6b,0x63,0xff,0x8f,0x0c,0xff,0x0d,0xe0,0x36,0x00,
        0x17,0xef,0xc7,0x8f,0x0c,0xdf,0xcd,0xe1,0x8c,0x00,0x17,0xbe,0xc7,0xff,0xff,0xc3,
        0x79,0xe7,0xbc,0x00,0x27,0x9e,0xc6,0xfb,0xf6,0xc3,0x3c,0x6f,0x3c,0x00,0x43,0x03,
        0xc7,0xf9,0xf8,0x3c,0x66,0x7c,0x3c,0x00,0x3c,0x66,0xe7,0xfb,0xfc,0x6c,0x66,0x6f,
        0x3c,0x00,0x3c,0x66,0xe7,0x83,0x0c,0x66,0x1c,0x67,0xbc,0x00,0x3c,0x7e,0xf7,0x83,
        0x0c,0x66,0x66,0x61,0xbc,0x00,0x2c,0x3c,0xff,0xff,0x0e,0x66,0x66,0x69,0xb6,0x00,
        0x6e,0x3c,0xdf,0xff,0x0e,0xc6,0x66,0x6b,0x76,0x00,0x7e,0x18,0xcf,0x83,0x0c,0xc3,
        0x3d,0xeb,0x66,0x00,0x7e,0x18,0xcf,0x83,0x0c,0xc3,0x19,0xe7,0xfe,0x00,0xe6,0x18,
        0xc7,0x83,0x0c,0xc3,0x18,0xb7,0xf8,0x00,0xc7,0x18,0x00,0xe3,0xfd,0x83,0x3c,0xbf,
        0x30,0x00,0xe3,0x7d,0xf1,0xf1,0xf9,0x81,0xe6,0xbf,0x70,0x00,0xe7,0xfd,0xfb,0x1f,
        0x77,0x9e,0x7b,0x66,0x66,0x00,0xe7,0xf1,0x9b,0x1b,0x6f,0xff,0xff,0xf6,0xfe,0x00,
        0xff,0xfd,0x9b,0x1b,0xcc,0xf3,0xff,0x36,0xfb,0x00,0xff,0xfd,0xfb,0x19,0xc7,0xf0,
        0xff,0x36,0x3f,0x00,0xdb,0x7d,0xff,0x1b,0xcc,0xf3,0xcf,0x36,0x3c,0x00,0xdb,0x15,
        0x8d,0xf3,0x6f,0xff,0xff,0x31,0xbc,0x00,0xc3,0xfd,0xfc,0xe7,0x67,0xde,0x7b,0x31,
        0xbc,0x00,0xc3,0x7d,0xf8,0x7e,0x0f,0x0d,0x9e,0x7b,0xfc,0x00,0xe7,0x10,0x0f,0x7f,
        0x0f,0x0f,0xff,0xcb,0xff,0x00,0xe6,0xcc,0xcf,0x63,0x0f,0xec,0xf3,0xcd,0xbf,0x00,
        0x66,0xed,0xdb,0x63,0x0f,0xfc,0xc6,0xcd,0xbe,0x00,0x66,0x7f,0x9b,0x7f,0x0f,0x3c,
        0xce,0x7d,0xbc,0x00,0x7e,0x7f,0xb3,0x7e,0x0f,0x3f,0xdc,0x0d,0xf6,0x00,0x7c,0x7f,
        0xbf,0xee,0xcf,0x3d,0xbf,0xc9,0xf6,0x00,0x3c,0x73,0xbf,0xe7,0xff,0xfc,0x3f,0x78,
        0xde,0x00,0x3c,0x73,0x03,0x63,0x7b,0x6c,0x03,0xff,0xde,0x00,0x3c,0x3d,0xf0,0xf3,
        0xef,0xf0,0x7b,0xff,0x7e,0x00,0xe6,0x7f,0xf9,0xff,0xff,0xf0,0x7c,0x3c,0x7e,0x00,
        0x6e,0xc7,0x9f,0x1e,0x31,0xb7,0xcc,0x6c,0x78,0x00,0x7c,0xc7,0x8f,0x07,0x83,0xb6,
        0xcc,0xec,0x7e,0x00,0x3c,0xc1,0x8f,0x3b,0xe3,0x3c,0xcc,0xcc,0x7e,0x00,0x38,0xc7,
        0x8f,0x38,0x77,0x3c,0xcd,0xcc,0x78,0x00,0x3c,0xc7,0x9f,0x1e,0x36,0x3e,0xf9,0x8c,
        0x78,0x00,0x6c,0x7f,0xf9,0xff,0xff,0xf6,0x79,0xbc,0xc0,0x00,0x6e,0x3d,0xf0,0xf3,
        0xef,0xf7,0x03,0xff,0xc0,0x00,0xe6,0x00,0x00,0x00,0x00,0x00,0x03,0x6f,0x00,0x00,
        }};

};

};
