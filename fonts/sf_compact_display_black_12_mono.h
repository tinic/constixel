namespace constixel {

struct sf_compact_display_black_12_mono {

    static constexpr std::array<std::pair<uint16_t, uint16_t>> glyph_table{{
        { 0x000020, 0x000000 },
        { 0x000041, 0x000001 },
        { 0x000042, 0x000002 },
        { 0x000043, 0x000003 },
        { 0x000044, 0x000004 },
        { 0x000045, 0x000005 },
        { 0x000046, 0x000006 },
        { 0x000047, 0x000007 },
        { 0x000048, 0x000008 },
        { 0x000049, 0x000009 },
        { 0x00004a, 0x000010 },
        { 0x00004b, 0x000011 },
        { 0x00004c, 0x000012 },
        { 0x00004d, 0x000013 },
        { 0x00004e, 0x000014 },
        { 0x00004f, 0x000015 },
        { 0x000050, 0x000016 },
        { 0x000051, 0x000017 },
        { 0x000052, 0x000018 },
        { 0x000053, 0x000019 },
        { 0x000054, 0x000020 },
        { 0x000055, 0x000021 },
        { 0x000056, 0x000022 },
        { 0x000057, 0x000023 },
        { 0x000058, 0x000024 },
        { 0x000059, 0x000025 },
        { 0x00005a, 0x000026 },
        { 0x000061, 0x000027 },
        { 0x000062, 0x000028 },
        { 0x000063, 0x000029 },
        { 0x000064, 0x000030 },
        { 0x000065, 0x000031 },
        { 0x000066, 0x000032 },
        { 0x000067, 0x000033 },
        { 0x000068, 0x000034 },
        { 0x000069, 0x000035 },
        { 0x00006a, 0x000036 },
        { 0x00006b, 0x000037 },
        { 0x00006c, 0x000038 },
        { 0x00006d, 0x000039 },
        { 0x00006e, 0x000040 },
        { 0x00006f, 0x000041 },
        { 0x000070, 0x000042 },
        { 0x000071, 0x000043 },
        { 0x000072, 0x000044 },
        { 0x000073, 0x000045 },
        { 0x000074, 0x000046 },
        { 0x000075, 0x000047 },
        { 0x000076, 0x000048 },
        { 0x000077, 0x000049 },
        { 0x000078, 0x000050 },
        { 0x000079, 0x000051 },
        { 0x00007a, 0x000052 },
        { 0x000024, 0x000053 },
        { 0x000030, 0x000054 },
        { 0x000031, 0x000055 },
        { 0x000032, 0x000056 },
        { 0x000033, 0x000057 },
        { 0x000034, 0x000058 },
        { 0x000035, 0x000059 },
        { 0x000036, 0x000060 },
        { 0x000037, 0x000061 },
        { 0x000038, 0x000062 },
        { 0x000039, 0x000063 },
        { 0x000026, 0x000064 },
        { 0x000021, 0x000065 },
        { 0x00003f, 0x000066 },
        { 0x000028, 0x000067 },
        { 0x000029, 0x000068 },
        { 0x00005b, 0x000069 },
        { 0x00005d, 0x000070 },
        { 0x00007b, 0x000071 },
        { 0x00007d, 0x000072 },
        { 0x000040, 0x000073 },
        { 0x000023, 0x000074 },
        { 0x00002f, 0x000075 },
        { 0x00007c, 0x000076 },
        { 0x00005c, 0x000077 },
        { 0x00002d, 0x000078 },
        { 0x000027, 0x000079 },
        { 0x000022, 0x000080 },
        { 0x00002c, 0x000081 },
        { 0x00002e, 0x000082 },
        { 0x00003a, 0x000083 },
        { 0x00003b, 0x000084 },
        { 0x00003c, 0x000085 },
        { 0x00003e, 0x000086 },
        { 0x00003d, 0x000087 },
        { 0x00002b, 0x000088 },
        { 0x00007e, 0x000089 },
        { 0x00005f, 0x000090 },
        { 0x00005e, 0x000091 },
        { 0x00002a, 0x000092 },
        { 0x000025, 0x000093 },
        { 0x000060, 0x000094 },
    }};

    static constexpr hextree<hextree<0, uint16_t>, uint16_t> glyph_tree(glyph_table);

    static constexpr std::array<char_info, 95> char_table({{
      // | unicode|    x|    y|    w|    h| xadv| xoff| yoff|
        { 0x000020,   10,    9,    1,    1,    2,    0,   12 },
        { 0x000041,    0,   28,    8,    9,    8,    0,    3 },
        { 0x000042,   22,   54,    6,    9,    8,    1,    3 },
        { 0x000043,   16,   28,    7,    9,    9,    1,    3 },
        { 0x000044,   17,   19,    7,    9,    9,    1,    3 },
        { 0x000045,   28,   54,    6,    9,    7,    1,    3 },
        { 0x000046,   34,   54,    6,    9,    7,    1,    3 },
        { 0x000047,   23,   28,    7,    9,    9,    1,    3 },
        { 0x000048,   18,    9,    7,    9,    9,    1,    3 },
        { 0x000049,   72,   22,    2,    9,    4,    1,    3 },
        { 0x00004a,   32,   36,    6,    9,    8,    1,    3 },
        { 0x00004b,   20,    0,    7,    9,    8,    1,    3 },
        { 0x00004c,   37,   45,    6,    9,    7,    1,    3 },
        { 0x00004d,    0,   19,    9,    9,   11,    1,    3 },
        { 0x00004e,   24,   18,    7,    9,    9,    1,    3 },
        { 0x00004f,   25,    9,    7,    9,    9,    1,    3 },
        { 0x000050,   40,   54,    6,    9,    8,    1,    3 },
        { 0x000051,   11,    9,    7,   10,    9,    1,    3 },
        { 0x000052,   27,    0,    7,    9,    9,    1,    3 },
        { 0x000053,    8,   54,    7,    9,    8,    0,    3 },
        { 0x000054,   15,   54,    7,    9,    9,    1,    3 },
        { 0x000055,   30,   27,    7,    9,    9,    1,    3 },
        { 0x000056,    0,   37,    8,    9,    8,   -1,    3 },
        { 0x000057,    0,   10,   11,    9,   11,   -1,    3 },
        { 0x000058,    0,   46,    8,    9,    8,   -1,    3 },
        { 0x000059,    0,   55,    8,    9,    6,   -1,    3 },
        { 0x00005a,   37,   26,    6,    9,    8,    1,    3 },
        { 0x000061,   25,   47,    6,    7,    7,    0,    5 },
        { 0x000062,   38,   17,    6,    9,    8,    1,    3 },
        { 0x000063,   50,   35,    6,    7,    8,    1,    5 },
        { 0x000064,   39,    8,    6,    9,    8,    1,    3 },
        { 0x000065,   55,   25,    6,    7,    8,    1,    5 },
        { 0x000066,   63,   42,    4,    9,    6,    1,    3 },
        { 0x000067,   38,   35,    6,    9,    8,    1,    5 },
        { 0x000068,   43,   26,    6,    9,    8,    1,    3 },
        { 0x000069,   70,   22,    2,   10,    4,    1,    2 },
        { 0x00006a,   67,   22,    3,   12,    4,    0,    2 },
        { 0x00006b,   44,   17,    6,    9,    7,    1,    3 },
        { 0x00006c,   70,    0,    2,    9,    4,    1,    3 },
        { 0x00006d,    8,   47,   10,    7,   12,    1,    5 },
        { 0x00006e,   56,   16,    6,    7,    8,    1,    5 },
        { 0x00006f,   57,    8,    6,    7,    8,    1,    5 },
        { 0x000070,   45,    8,    6,    9,    8,    1,    5 },
        { 0x000071,   43,   44,    6,    9,    8,    1,    5 },
        { 0x000072,   63,    7,    5,    7,    6,    1,    5 },
        { 0x000073,   59,    0,    6,    7,    8,    1,    5 },
        { 0x000074,   49,   44,    5,    9,    7,    1,    3 },
        { 0x000075,   56,   35,    6,    7,    8,    1,    5 },
        { 0x000076,   18,   47,    7,    7,    7,   -1,    5 },
        { 0x000077,   15,   37,   10,    7,   10,    0,    5 },
        { 0x000078,   25,   37,    7,    7,    7,    0,    5 },
        { 0x000079,   44,   35,    6,    9,    7,    0,    5 },
        { 0x00007a,   65,    0,    5,    7,    7,    1,    5 },
        { 0x000024,    8,   37,    7,   10,    8,    1,    3 },
        { 0x000030,   31,   46,    6,    8,    8,    1,    4 },
        { 0x000031,   67,   42,    4,    8,    8,    1,    4 },
        { 0x000032,   41,    0,    6,    8,    8,    1,    4 },
        { 0x000033,   47,    0,    6,    8,    8,    0,    4 },
        { 0x000034,   31,   18,    7,    8,    8,    0,    4 },
        { 0x000035,   50,   17,    6,    8,    8,    0,    4 },
        { 0x000036,   32,    9,    7,    8,    8,    0,    4 },
        { 0x000037,   51,    8,    6,    8,    8,    1,    4 },
        { 0x000038,   53,    0,    6,    8,    8,    0,    4 },
        { 0x000039,   34,    0,    7,    8,    8,    1,    4 },
        { 0x000026,    8,   28,    8,    9,    9,    1,    3 },
        { 0x000021,   70,    9,    2,    9,    4,    1,    3 },
        { 0x00003f,   49,   26,    6,    9,    7,    0,    3 },
        { 0x000028,   65,   51,    3,   11,    5,    1,    3 },
        { 0x000029,   68,   50,    3,   11,    5,    0,    3 },
        { 0x00005b,   59,   42,    4,   11,    6,    1,    3 },
        { 0x00005d,   61,   53,    4,   11,    6,    1,    3 },
        { 0x00007b,   46,   53,    5,   11,    5,    0,    3 },
        { 0x00007d,   51,   53,    5,   11,    5,    0,    3 },
        { 0x000040,    0,    0,   10,   10,   12,    1,    3 },
        { 0x000023,    9,   19,    8,    9,    8,    0,    3 },
        { 0x00002f,   54,   42,    5,   11,    5,   -1,    3 },
        { 0x00007c,   68,    7,    2,   11,    4,    1,    3 },
        { 0x00005c,   56,   53,    5,   11,    5,   -1,    3 },
        { 0x00002d,   50,   42,    4,    2,    6,    1,    8 },
        { 0x000027,   73,   16,    3,    4,    3,    0,    3 },
        { 0x000022,   68,   18,    5,    4,    6,    0,    3 },
        { 0x00002c,   74,    0,    3,    4,    3,    0,   10 },
        { 0x00002e,   55,   32,    2,    3,    4,    1,    9 },
        { 0x00003a,   72,    9,    2,    7,    4,    1,    5 },
        { 0x00003b,   72,    0,    2,    9,    4,    0,    5 },
        { 0x00003c,   61,   23,    6,    7,    8,    1,    4 },
        { 0x00003e,   62,   35,    6,    7,    8,    1,    4 },
        { 0x00003d,   61,   30,    6,    5,    8,    1,    6 },
        { 0x00002b,   62,   15,    6,    7,    8,    1,    5 },
        { 0x00007e,   15,   44,    6,    3,    7,   -1,    6 },
        { 0x00005f,   27,   44,    5,    2,    5,    0,   13 },
        { 0x00005e,   21,   44,    6,    3,    6,    0,    4 },
        { 0x00002a,   68,   34,    5,    5,    5,    0,    3 },
        { 0x000025,   10,    0,   10,    9,   12,    1,    3 },
        { 0x000060,   56,   23,    3,    2,    6,    1,    2 },
    }};

    static constexpr mono = true;

    static constexpr std::array<uint8_t, 640> glyph_bitmap{{
        0x1f,0x18,0x6c,0xff,0x9e,0x3c,0xf3,0xcf,0x7f,0xd8,0x61,0xbc,0xcd,0xdf,0xff,0x7f,
        0xfe,0x7f,0xff,0xd0,0x60,0xfd,0x8d,0x98,0xf3,0xef,0x9e,0x7f,0x9b,0xf0,0xfe,0xfd,
        0x0f,0x98,0xf3,0x8e,0x73,0xcf,0xbb,0x30,0xf6,0xda,0xef,0x9f,0xdf,0x9c,0x7e,0x61,
        0xb3,0x00,0xf6,0xc7,0xff,0x9f,0xb3,0xb9,0x9e,0x7f,0xff,0xc0,0xfb,0x85,0xbd,0xdb,
        0xbf,0x7f,0xfe,0x6f,0x7f,0xc0,0xc0,0x09,0xfd,0xd9,0xde,0x7e,0xf3,0xc1,0xff,0x80,
        0x60,0x10,0xec,0xf8,0xc0,0x1f,0xdf,0xbd,0xff,0x80,0x3c,0x07,0x31,0x9c,0x3c,0x1f,
        0xff,0xff,0x8f,0xc0,0xee,0xef,0xb1,0xbe,0x7e,0xde,0x63,0xe7,0x8f,0xc0,0xee,0xf8,
        0xf1,0xe3,0xe7,0xfe,0x63,0x67,0x8f,0xc0,0x6e,0xd8,0xf1,0xe3,0xfd,0x9e,0x67,0x67,
        0x8f,0x00,0x6e,0xd8,0xff,0xe3,0xe7,0x9f,0xe6,0x7f,0x8f,0xc0,0x6a,0xd8,0xff,0xe3,
        0xe7,0x9e,0xce,0x3c,0x0f,0xc0,0x7a,0xdb,0xf1,0xe3,0x7f,0xfe,0x0c,0x00,0xcc,0xc0,
        0x7b,0xcf,0xb1,0xbe,0x3c,0xde,0x00,0xd8,0xcf,0x30,0x3b,0x87,0xb1,0x9c,0x03,0x0c,
        0x3f,0xff,0xff,0x30,0x31,0x80,0xc0,0xc6,0x7b,0x0c,0x3f,0xcf,0xf7,0xa0,0xe3,0x9b,
        0x7c,0xe6,0x7b,0xed,0xf0,0xcc,0xc7,0xa0,0xe3,0x9a,0x7e,0xf6,0xdb,0xfd,0xbe,0xcc,
        0xc5,0x80,0xf7,0xbf,0x67,0xf6,0xdb,0x3f,0x33,0xcc,0xc5,0x80,0xf7,0xbf,0x63,0xff,
        0x9b,0x3f,0x33,0xcc,0x00,0xc0,0xff,0x96,0x63,0xdf,0xff,0x3f,0xbf,0x40,0x6f,0xc0,
        0xdd,0xff,0x63,0xcf,0xff,0xfd,0x9e,0x61,0xe0,0xc0,0xdd,0xff,0x67,0xce,0x1b,0x6d,
        0xc0,0xf3,0xcf,0xc0,0xc1,0xb4,0x7e,0xc6,0x07,0xf8,0x1d,0xff,0x0f,0xc0,0xc1,0xb4,
        0x7c,0x03,0x1f,0xf8,0x3f,0xfb,0xcf,0xc0,0x3c,0x38,0x3c,0x7b,0x18,0xdb,0x37,0xf9,
        0xef,0xc0,0x3c,0x7c,0x7e,0xff,0x19,0xdf,0x87,0x98,0x6f,0xc0,0x3c,0x6c,0xc7,0x8f,
        0x19,0x99,0x9d,0xff,0xef,0xc0,0x7c,0x68,0xc7,0x83,0x1b,0x99,0x98,0xf7,0xef,0x00,
        0x6e,0x76,0xc1,0x9f,0x1b,0x19,0x81,0x80,0x1c,0x00,0x7e,0xde,0xc7,0x9f,0x1f,0xf9,
        0x99,0x87,0xf8,0x00,0x7e,0xce,0xc7,0x8f,0xff,0xf9,0x99,0x87,0xe2,0x00,0xe7,0xfe,
        0x7e,0xfd,0xf1,0xfc,0xde,0xcf,0x07,0x80,0xe7,0x7f,0x3c,0x78,0x0f,0xfc,0xff,0xcf,
        0xc3,0x00,0xe7,0x7d,0xd9,0xf7,0x0f,0x3f,0xf3,0xcd,0xe7,0x80,0xe6,0xfd,0xd9,0xb6,
        0x0f,0x37,0xb0,0xcc,0x72,0x00,0x66,0xf0,0xdf,0xbe,0x0f,0x37,0xb3,0xcd,0xe0,0x00,
        0x66,0xfc,0xff,0x1c,0x0f,0xf7,0xbf,0xff,0xc0,0x00,0x7e,0xfc,0xff,0x3e,0x0d,0xb7,
        0x9e,0x6f,0x00,0x00,0x7c,0x7c,0xe7,0x36,0xcf,0xff,0x3c,0x7e,0xee,0x00,0x3c,0x1c,
        0xe7,0x77,0xfd,0xee,0x3c,0xfe,0xfe,0x00,0x3c,0xfc,0xd9,0x9f,0x78,0x0f,0xb0,0xd9,
        0xf6,0x00,0x3c,0x7d,0xfb,0xdf,0x06,0x1f,0xb0,0xd9,0xe6,0x00,0xe6,0x11,0xb6,0x60,
        0xf6,0x19,0xfc,0xd8,0xc6,0x00,0x6e,0xd9,0xbb,0xbc,0xfe,0x19,0xfd,0x98,0xc6,0x00,
        0x7c,0xff,0xfb,0x3f,0x9e,0x19,0xb1,0x98,0xc6,0x00,0x3c,0xcc,0xdb,0x37,0x9e,0x1f,
        0xb1,0x98,0xc6,0x00,0x38,0xcc,0xdb,0x3f,0x9e,0x0f,0xb1,0x98,0xcc,0x00,0x3c,0xcc,
        0xde,0x37,0x9e,0x01,0xbf,0x1e,0x3c,0x00,0x7c,0xcc,0xde,0x3f,0xf7,0xe1,0x9f,0x1e,
        0x36,0x00,0x6e,0xcc,0xce,0x3e,0xf7,0xe0,0xfc,0xc7,0xe6,0x00,0xe6,0x3d,0xff,0xef,
        0xff,0xf9,0xfe,0xc7,0xe6,0x00,0x66,0x7f,0xff,0xff,0xff,0xfd,0x86,0x61,0xe6,0x00,
        0x66,0x66,0x63,0x3c,0x30,0xcd,0x86,0x61,0xe6,0x00,0x7e,0x78,0x63,0x3c,0x30,0xcf,
        0x87,0x61,0xe6,0x00,0x3c,0x7e,0x63,0xef,0xff,0xcf,0x87,0x61,0xe6,0x00,0x3c,0x1e,
        0x63,0xff,0xff,0xfd,0x86,0x31,0xec,0x00,0x18,0x66,0x63,0x3c,0x30,0xf9,0x86,0x31,
        0xbc,0x00,0x18,0x7e,0x63,0xff,0xf0,0xc1,0x86,0x31,0xb0,0x00,0x18,0x3c,0x63,0xef,
        0xf0,0xc1,0xfe,0x3f,0x80,0x00,0x18,0x00,0x00,0x00,0x00,0x00,0xfc,0x1f,0x80,0x00,
        }};

};

};
